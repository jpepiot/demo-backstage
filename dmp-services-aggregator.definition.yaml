apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: dmp-services-aggregator
  title: API Gateway service
  description: API Gateway service
spec:
  type: service
  lifecycle: production
  owner: core-team
  consumesApis:
    - entity-api
    - user-api
  providesApis:
    - public-api
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: public-api
  description: Athena Public API
  title: Athena Public API
spec:
  type: openapi
  lifecycle: production
  owner: core-team
  definition: |
    openapi: 3.0.0
    info:
        title: Athena Public API
        version: v1
        description: Welcome to the official Athena public API.
        contact:
            name: Connectivity Team
            url: 'http://developer.athena.emea.thermo.com/'
            email: athena-sw-all@thermofisher.onmicrosoft.com
        license:
            name: 'Copyright FEI SAS, as part of Thermo Fisher Scientific'
            url: 'https://www.fei.com'
    servers:
        -
            url: 'http://developer.athena.emea.thermo.com/mocks/v1'
            description: Mocks
    paths:
        /platform/version:
            get:
                tags:
                    - Platform
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PlatformVersionModel'
                        description: OK
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-platform-version
                summary: Retrieve platform versions
        /activities:
            get:
                tags:
                    - Activity
                parameters:
                    -
                        name: name
                        description: Filter by name
                        schema:
                            type: string
                        in: query
                    -
                        name: status
                        description: Filter by status
                        schema:
                            enum:
                                - Created
                                - Pending
                                - Starting
                                - Started
                                - Pausing
                                - Paused
                                - Aborting
                                - Aborted
                                - Stopping
                                - Stopped
                                - Cancelled
                                - CompletedWithWarnings
                                - CompletedWithErrors
                                - Completed
                                - StartedManuallyRecoverable
                                - FailedManuallyRecoverable
                                - FailedAutomaticallyRecoverable
                                - PendingSample
                                - WaitingForStart
                                - SampleLost
                                - Skipped
                                - WaitingForManualInput
                                - Unset
                            type: string
                        in: query
                    -
                        name: parentId
                        description: Filter by parentId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: typeName
                        description: Filter by typeName
                        schema:
                            type: string
                        in: query
                    -
                        name: typeVersion
                        description: Filter by typeVersion
                        schema:
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: createdDateTime
                            enum:
                                - createdDateTime
                                - updatedDateTime
                                - name
                                - typeName
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/ActivitiesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activities
                summary: List all activities
                description: ''
            post:
                requestBody:
                    description: ''
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ActivityPostExample'
                tags:
                    - Activity
                responses:
                    '201':
                        $ref: '#/components/responses/ActivityFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '413':
                        $ref: '#/components/responses/Error413TooLarge'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-activity
                summary: Create a new activity
                description: ''
        '/activities/{uuid}':
            get:
                tags:
                    - Activity
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activity
                summary: Retrieve an activity
                description: ''
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityPatchModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ActivityPatchExample'
                tags:
                    - Activity
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: patch-activity-uuid
                summary: Update an activity
            parameters:
                -
                    name: uuid
                    description: Element UUID
                    schema:
                        format: uuid
                        type: string
                    in: path
                    required: true
        '/activities/{uuid}/files':
            post:
                requestBody:
                    content:
                        multipart/form-data:
                            schema:
                                $ref: '#/components/schemas/FileCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/FilePostExample'
                tags:
                    - Activity
                responses:
                    '201':
                        $ref: '#/components/responses/FileFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '413':
                        $ref: '#/components/responses/Error413TooLarge'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-activity-files
                summary: Create a file for an activity
            parameters:
                -
                    name: uuid
                    description: Element UUID
                    schema:
                        format: uuid
                        type: string
                    in: path
                    required: true
        '/activities/{uuid}/permissions':
            get:
                tags:
                    - Activity
                parameters:
                    -
                        name: uuid
                        description: Activity UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityPermissionsFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activity-permissions
                summary: Retrieve activity permissions
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PermissionPostExample'
                tags:
                    - Activity
                parameters:
                    -
                        name: uuid
                        description: Activity UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '201':
                        $ref: '#/components/responses/ActivityPermissionFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-activity-permission
                summary: Create an activity permission
                description: ''
        '/activities/{uuid}/permissions/{permissionId}':
            delete:
                tags:
                    - Activity
                parameters:
                    -
                        name: uuid
                        description: Activity UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: permissionId
                        description: Activity permission UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-activity-permission
                summary: Delete an activity permission
                description: ''
        '/activities/tree-deletion-requests/{requestId}':
            get:
                tags:
                    - Activity
                parameters:
                    -
                        name: requestId
                        description: Request UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityTreeDeletionRequestFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activity-tree-deletion-request
                summary: Retrieve an activity tree deletion request
                description: ''
        /activities/tree-deletion-requests:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityTreeDeletionRequestCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ActivityTreeDeletionRequestPostExample'
                tags:
                    - Activity
                responses:
                    '201':
                        $ref: '#/components/responses/ActivityTreeDeletionRequestFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-activity-tree-deletion-request
                summary: Create an activity tree deletion request
                description: ''
        '/activities/cleanup-requests/{requestId}':
            get:
                tags:
                    - Activity
                parameters:
                    -
                        name: requestId
                        description: Request UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityCleanupRequestFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activity-cleanup-request
                summary: Retrieve an activity cleanup request
                description: ''
        /activities/cleanup-requests:
            get:
                tags:
                    - Activity
                responses:
                    '200':
                        $ref: '#/components/responses/ActivityCleanupRequestsFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-activity-cleanup-requests
                summary: Retrieve activity cleanup requests
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCleanupRequestCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ActivityCleanupRequestPostExample'
                tags:
                    - Activity
                responses:
                    '201':
                        $ref: '#/components/responses/ActivityCleanupRequestFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-activity-cleanup-request
                summary: Create an activity cleanup request
                description: ''
        /configuration:
            get:
                tags:
                    - Configuration
                responses:
                    '200':
                        $ref: '#/components/responses/ConfigurationResponse'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-configuration
                summary: Retrieve the platform configuration (processors)
                description: ''
        /files:
            get:
                tags:
                    - File
                parameters:
                    -
                        name: name
                        description: Filter by name
                        schema:
                            type: string
                        in: query
                    -
                        name: parentId
                        description: Filter by parent id
                        schema:
                            type: string
                        in: query
                    -
                        name: extension
                        description: Filter by extension
                        schema:
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: createdDateTime
                            enum:
                                - name
                                - parentId
                                - extension
                                - createdDateTime
                                - updatedDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/FilesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-files
                summary: List all files
            post:
                requestBody:
                    content:
                        multipart/form-data:
                            schema:
                                $ref: '#/components/schemas/FileCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/FilePostExample'
                tags:
                    - File
                responses:
                    '201':
                        $ref: '#/components/responses/FileFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '413':
                        $ref: '#/components/responses/Error413TooLarge'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-files
                summary: Create a file
        '/files/{uuid}/binary':
            get:
                tags:
                    - File
                responses:
                    '200':
                        content:
                            application/octet-stream:
                                schema:
                                    format: binary
                                    type: string
                                examples:
                                    example:
                                        value: File binary
                        description: OK
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-file-binary
                summary: Retrieve a file binary (download)
                description: ''
            parameters:
                -
                    name: uuid
                    description: Element UUID
                    schema:
                        format: uuid
                        type: string
                    in: path
                    required: true
        '/files/{uuid}/permissions':
            get:
                tags:
                    - File
                parameters:
                    -
                        name: uuid
                        description: File UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FilePermissionsFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-file-permissions
                summary: Retrieve file permissions
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PermissionPostExample'
                tags:
                    - File
                parameters:
                    -
                        name: uuid
                        description: File UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '201':
                        $ref: '#/components/responses/FilePermissionFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-file-permission
                summary: Create a file permission
                description: ''
        '/files/{uuid}/permissions/{permissionId}':
            delete:
                tags:
                    - File
                parameters:
                    -
                        name: uuid
                        description: File UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: permissionId
                        description: File permission UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-file-permission
                summary: Delete a file permission
                description: ''
        /property-types:
            get:
                tags:
                    - PropertyType
                parameters:
                    -
                        name: name
                        description: Filter by name
                        schema:
                            type: string
                        in: query
                    -
                        name: version
                        description: Filter by version
                        schema:
                            type: string
                        in: query
                    -
                        name: displayName
                        description: Filter by display name
                        schema:
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            enum:
                                - name
                                - version
                                - displayName
                                - createdDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/pageNumber'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/orderDirection'
                responses:
                    '200':
                        $ref: '#/components/responses/PropertyTypesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-property-types
                summary: List all property types
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PropertyTypePostExample'
                tags:
                    - PropertyType
                responses:
                    '201':
                        $ref: '#/components/responses/PropertyTypeFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '409':
                        $ref: '#/components/responses/Error409Conflict'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-v1-property-types
                summary: Create a property type
        '/property-types/{uuid}':
            delete:
                tags:
                    - PropertyType
                responses:
                    '204':
                        description: No Content
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-property-types-uuid
                summary: Delete a property type
                description: ''
            parameters:
                -
                    name: uuid
                    description: Element UUID
                    schema:
                        format: uuid
                        type: string
                    in: path
                    required: true
        /links:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LinkCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/LinkPostExample'
                tags:
                    - Link
                responses:
                    '201':
                        $ref: '#/components/responses/LinkFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-link
                summary: Create a link
                description: ''
        '/links/{uuid}':
            get:
                tags:
                    - Link
                parameters:
                    -
                        name: uuid
                        description: Link UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/LinkFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-link
                summary: Retrieve a link
                description: ''
            delete:
                tags:
                    - Link
                parameters:
                    -
                        name: uuid
                        description: Link UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-link
                summary: Delete a link
                description: ''
        /folders:
            get:
                tags:
                    - Folder
                parameters:
                    -
                        name: displayName
                        description: Filter by display name
                        schema:
                            type: string
                        in: query
                    -
                        name: parentId
                        description: Filter by parent id
                        schema:
                            type: string
                        in: query
                    -
                        name: withoutParent
                        description: Filter folders without parent
                        schema:
                            type: boolean
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            enum:
                                - displayName
                                - createdDateTime
                                - updatedDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/pageNumber'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/orderDirection'
                responses:
                    '200':
                        $ref: '#/components/responses/FoldersFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-folders
                summary: List all folders
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FolderCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/FolderPostExample'
                tags:
                    - Folder
                responses:
                    '201':
                        $ref: '#/components/responses/FolderFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-folder
                summary: Create a folder
                description: ''
        '/folders/{uuid}/permissions':
            get:
                tags:
                    - Folder
                parameters:
                    -
                        name: uuid
                        description: Folder UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FolderPermissionsFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-folder-permissions
                summary: Retrieve folder permissions
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PermissionPostExample'
                tags:
                    - Folder
                parameters:
                    -
                        name: uuid
                        description: Folder UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '201':
                        $ref: '#/components/responses/FolderPermissionFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-folder-permission
                summary: Create a folder permission
                description: ''
        '/folders/{uuid}/permissions/{permissionId}':
            delete:
                tags:
                    - Folder
                parameters:
                    -
                        name: uuid
                        description: Folder UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: permissionId
                        description: Folder permission UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-folder-permission
                summary: Delete a folder permission
                description: ''
        '/folders/tree-deletion-requests/{requestId}':
            get:
                tags:
                    - Folder
                parameters:
                    -
                        name: requestId
                        description: Request UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FolderTreeDeletionRequestFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-folder-tree-deletion-request
                summary: Retrieve a folder tree deletion request
                description: ''
        /folders/tree-deletion-requests:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FolderTreeDeletionRequestCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/FolderTreeDeletionRequestPostExample'
                tags:
                    - Folder
                responses:
                    '201':
                        $ref: '#/components/responses/FolderTreeDeletionRequestFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-folder-tree-deletion-request
                summary: Create a folder tree deletion request
                description: ''
        '/items/{uuid}/permissions':
            get:
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        description: Item UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ItemPermissionsFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item-permissions
                summary: Retrieve item permissions
                description: ''
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PermissionPostExample'
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        description: Item UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '201':
                        $ref: '#/components/responses/ItemPermissionFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-item-permission
                summary: Create an item permission
                description: ''
        '/items/{uuid}/permissions/{permissionId}':
            delete:
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        description: Item UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: permissionId
                        description: Item permission UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-item-permission
                summary: Delete an item permission
                description: ''
        /item-types:
            get:
                tags:
                    - ItemType
                parameters:
                    -
                        name: name
                        schema:
                            type: string
                        in: query
                    -
                        name: displayName
                        schema:
                            type: string
                        in: query
                    -
                        name: category
                        schema:
                            type: string
                        in: query
                    -
                        name: scope
                        schema:
                            enum:
                                - standard
                                - user
                            type: string
                        in: query
                    -
                        name: status
                        schema:
                            enum:
                                - published
                                - draft
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: createdDateTime
                            enum:
                                - createdDateTime
                                - name
                                - version
                                - displayName
                                - category
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/ItemTypesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item-types
                summary: Get item types
                description: Search for item types
        '/item-types/{uuid}':
            get:
                tags:
                    - ItemType
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ItemTypeFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item-type
                summary: Get an item type
                description: Get an item type by its identifier
        /item-type-categories:
            get:
                tags:
                    - ItemTypeCategory
                parameters:
                    -
                        name: name
                        schema:
                            type: string
                        in: query
                    -
                        name: version
                        schema:
                            type: string
                        in: query
                    -
                        name: displayName
                        schema:
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: name
                            enum:
                                - name
                                - version
                                - displayName
                                - createdDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/ItemTypeCategoriesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item-type-categories
                summary: Get item type categories
                description: Search for item type categories
        '/iiif-images/{identifier}':
            get:
                tags:
                    - Image
                parameters:
                    -
                        name: identifier
                        description: The identifier of the requested image. File uuid can be used.
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '303':
                        headers:
                            Location:
                                schema:
                                    format: uri
                                    type: string
                                description: URI that it redirects to
                        description: Redirection to the image information document's URI
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-image-iiif-information-redirect
                summary: Get the IIIF image information document
                description: >-
                    Returns the IIIF (International Image Interoperability Framework) image information document
                    by its identifier
        '/iiif-images/{identifier}/info.json':
            get:
                tags:
                    - Image
                parameters:
                    -
                        name: identifier
                        description: The identifier of the requested image. File uuid can be used.
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/IIIFFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-image-iiif-information
                summary: Get the IIIF image information document
                description: >-
                    Returns the IIIF (International Image Interoperability Framework) image information document
                    by its identifier
        '/iiif-images/{identifier}/{region}/{size}/{rotation}/{quality}.{format}':
            get:
                tags:
                    - Image
                parameters:
                    -
                        name: identifier
                        description: The identifier of the requested image. File uuid can be used.
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: region
                        description: Defines the rectangular portion of the image to be returned.
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: size
                        description: Specifies the dimensions to which the extracted region
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: rotation
                        description: Specifies mirroring and rotation
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: quality
                        description: Quality of the returned image
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: format
                        description: Format of the returned image
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/octet-stream:
                                schema:
                                    format: binary
                                    type: string
                        description: OK
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-iiif-image-binary
                summary: Download the image computed from IIIF path parameters
                description: >-
                    Returns the image binary computed from IIIF (International Image Interoperability Framework)
                    path parameters
        /manifests/property-types:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeManifestCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/PropertyTypeManifestPostExample'
                tags:
                    - Manifest
                responses:
                    '200':
                        description: Manifest with the same content already registered
                    '201':
                        description: Manifest successfully registered
                    '400':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ErrorStatusResponse'
                            examples:
                                example:
                                    $ref: '#/components/examples/ErrorExample'
                        description: Manifest model is null or incomplete
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '409':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ErrorStatusResponse'
                            examples:
                                example:
                                    $ref: '#/components/examples/ErrorExample'
                        description: The manifest type already exists in the database
                    '413':
                        $ref: '#/components/responses/Error413TooLarge'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-manifests-property-types
                summary: Register a property type manifest.
                description: Only scope 'Application' is allowed.
        /users:
            get:
                tags:
                    - User
                parameters:
                    -
                        name: email
                        description: Filter by email
                        schema:
                            format: email
                            type: string
                        in: query
                    -
                        name: firstName
                        description: Filter by firstname
                        schema:
                            type: string
                        in: query
                    -
                        name: lastName
                        description: Filter by lastname
                        schema:
                            type: string
                        in: query
                    -
                        name: userName
                        description: Filter by username
                        schema:
                            type: string
                        in: query
                    -
                        example: role
                        name: include
                        description: Specify additional fields to add to the response payload
                        schema:
                            type: string
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            enum:
                                - email
                                - firstName
                                - lastName
                                - userName
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/pageNumber'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/orderDirection'
                responses:
                    '200':
                        $ref: '#/components/responses/UsersFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-users
                summary: List all users
                description: ''
        '/users/{uuid}':
            get:
                tags:
                    - User
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        example: role
                        name: include
                        description: Specify additional fields to add to the response payload
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        $ref: '#/components/responses/UserFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-user
                summary: Retrieve user information
                description: ''
        '/users/{uuid}/roles':
            get:
                tags:
                    - User
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            enum:
                                - name
                                - type
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/pageNumber'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/orderDirection'
                responses:
                    '200':
                        $ref: '#/components/responses/RolesFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-user-roles
                summary: Retrieve user roles
                description: ''
        /users/me:
            get:
                tags:
                    - User
                parameters:
                    -
                        example: role
                        name: include
                        description: Specify additional fields to add to the response payload
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        $ref: '#/components/responses/UserFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-users-me
                summary: Retrieve current user information
                description: ''
        '/feature-licenses/{feature}':
            get:
                tags:
                    - FeatureLicense
                parameters:
                    -
                        name: feature
                        schema:
                            type: string
                        in: path
                        required: true
                    -
                        name: version
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        $ref: '#/components/responses/FeatureLicenseFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-feature-license
                description: Returns the feature license corresponding to the feature and version
        '/files/{uuid}':
            get:
                tags:
                    - File
                responses:
                    '200':
                        $ref: '#/components/responses/FileFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-file
                summary: Retrieve a file
                description: ''
            delete:
                tags:
                    - File
                responses:
                    '204':
                        description: No Content
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-file
                summary: Delete a file
                description: ''
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FilePatchModel'
                tags:
                    - File
                parameters:
                    -
                        name: uuid
                        description: Element UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FileFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: patch-file
                summary: Patch a file
                description: Patch a file by its identifier
            parameters:
                -
                    name: uuid
                    description: Element UUID
                    schema:
                        format: uuid
                        type: string
                    in: path
                    required: true
        '/items/{uuid}':
            get:
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ItemFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item
                summary: Get an item
                description: Get an item by its identifier
            delete:
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: delete-item
                summary: Delete an item
                description: Delete an item by its identifier
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ItemPatchModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ItemPatchExample'
                tags:
                    - Item
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/ItemFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: patch-item
                summary: Patch an item
                description: Patch an item by its identifier
        '/folders/{uuid}':
            get:
                tags:
                    - Folder
                parameters:
                    -
                        name: uuid
                        description: Folder UUID
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FolderFetchResponse'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-folder
                summary: Retrieve a folder
                description: ''
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FolderPatchModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/FolderPatchExample'
                tags:
                    - Folder
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        $ref: '#/components/responses/FolderFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: patch-folder
                summary: Patch a folder
                description: Patch a folder by its identifier
        /activities/search:
            get:
                tags:
                    - Activity
                parameters:
                    -
                        example: >-
                            (typeName:"free" AND properties.standard.instrument.id:5000) OR
                            (properties.standard.instrument.id:[1000 TO 5000])
                        name: query
                        description: Lucene query syntax
                        schema:
                            type: string
                        in: query
                        required: true
                    -
                        example: +createdDateTime
                        name: sort
                        description: Lucene sort syntax
                        schema:
                            type: string
                        in: query
                    -
                        example: 'terms:status avg:properties.my-property'
                        name: aggregate
                        description: ''
                        schema:
                            type: string
                        in: query
                    -
                        name: pageNumber
                        description: ''
                        schema:
                            type: integer
                        in: query
                        required: false
                    -
                        name: pageSize
                        description: ''
                        schema:
                            type: integer
                        in: query
                responses:
                    '200':
                        $ref: '#/components/responses/SearchActivitiesFetchResponse'
                operationId: get-activities-search
                summary: Advanced search for activities
        /item-location-history:
            get:
                tags:
                    - ItemLocationHistory
                parameters:
                    -
                        name: itemId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: location.ContainerId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: location.ContainerType
                        description: Type of the container item
                        schema:
                            $ref: '#/components/schemas/NamespacePattern'
                        in: query
                    -
                        name: location.Type
                        schema:
                            $ref: '#/components/schemas/LocationType'
                        in: query
                    -
                        name: from
                        schema:
                            format: date-time
                            type: string
                        in: query
                    -
                        name: until
                        schema:
                            format: date-time
                            type: string
                        in: query
                    -
                        name: hasLocation
                        schema:
                            type: boolean
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: startDateTime
                            enum:
                                - startDateTime
                                - endDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/ItemLocationsFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-item-location-history
                summary: Get item location history
                description: Search item location history
        /items:
            get:
                tags:
                    - Item
                parameters:
                    -
                        name: displayName
                        description: Display name of the item
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: category
                        description: Category of the item
                        schema:
                            type: string
                        in: query
                    -
                        name: parentId
                        description: Parent of the item
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: originId
                        description: Origin of the item
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: location.ContainerId
                        description: Identifier of the container item
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: location.ContainerType
                        description: Type of the container
                        schema:
                            $ref: '#/components/schemas/NamespacePattern'
                        in: query
                    -
                        name: location.Type
                        description: Type of the item location
                        schema:
                            $ref: '#/components/schemas/LocationType'
                        in: query
                    -
                        name: typeName
                        description: Type name of the item
                        schema:
                            type: string
                        in: query
                    -
                        name: property.TypeName
                        description: Property type name
                        schema:
                            type: string
                        in: query
                    -
                        name: property.Value
                        description: Property value
                        schema:
                            type: string
                        in: query
                    -
                        name: property.TypeVersion
                        description: Property type version
                        schema:
                            type: string
                        in: query
                    -
                        name: withoutParent
                        schema:
                            type: boolean
                        in: query
                    -
                        name: orderBy
                        description: Order by parameter
                        schema:
                            default: createdDateTime
                            enum:
                                - typeName
                                - displayName
                                - createdDateTime
                                - updatedDateTime
                            type: string
                        in: query
                    -
                        $ref: '#/components/parameters/orderDirection'
                    -
                        $ref: '#/components/parameters/pageSize'
                    -
                        $ref: '#/components/parameters/pageNumber'
                responses:
                    '200':
                        $ref: '#/components/responses/ItemsFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '404':
                        $ref: '#/components/responses/Error404NotFound'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: get-items
                summary: Get items
                description: Search for items
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ItemCreationModel'
                            examples:
                                example:
                                    $ref: '#/components/examples/ItemPostExample'
                tags:
                    - Item
                responses:
                    '201':
                        $ref: '#/components/responses/ItemFetchResponse'
                    '400':
                        $ref: '#/components/responses/Error400BadRequest'
                    '401':
                        $ref: '#/components/responses/Error401Unauthorized'
                    '403':
                        $ref: '#/components/responses/Error403Forbidden'
                    '413':
                        $ref: '#/components/responses/Error413TooLarge'
                    '415':
                        $ref: '#/components/responses/Error415UnsupportedMediaType'
                    '500':
                        $ref: '#/components/responses/Error500InternalError'
                operationId: post-item
                summary: Create an item
                description: Create a new item
    components:
        schemas:
            ErrorStatusResponse:
                required:
                    - message
                    - object
                type: object
                properties:
                    message:
                        type: string
                    object:
                        enum:
                            - error
                        type: string
            LocationType:
                enum:
                    - indexed
                    - rowColumn
                    - enumerated
                    - xy
                    - xyz
                    - site
                type: string
            RangeBucketAggregateResponseModel:
                title: DateHistogram bucket aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - range
                                type: string
                            from:
                                format: double
                                type: number
                            to:
                                format: double
                                type: number
            ValueAggregateResponseModel:
                title: value aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - value
                                type: string
                            value:
                                format: double
                                type: number
            AggregateBaseResponseModel:
                type: object
                properties:
                    name:
                        format: string
            DateHistogramBucketAggregateResponseModel:
                title: DateHistogram bucket aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - dateHistogram
                                type: string
                            items:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        date:
                                            format: date-time
                                            type: string
                                        count:
                                            format: long
                                            type: number
            PercentilesAggregateResponseModel:
                title: DateHistogram bucket aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - percentile
                                type: string
                            items:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        percentile:
                                            format: double
                                            type: number
                                        value:
                                            format: double
                                            type: number
            PropertyBaseModel:
                title: PropertyBaseModel
                type: object
                properties:
                    value:
                        type: string
                        example: '82.36'
                    unitCode:
                        description: >-
                            Code of the unit. If not provided at creation time, the default unit of the property
                            type is used. If no default unit is set, the standard unit is used.
                        type: string
                        example: Kelvin
            NamespacePatternWithDashes:
                title: NamespacePatternWithDashes
                description: |-
                    Should match dot splitted namespaces with dashes like:
                     - com
                     - com.athena
                     - com.athena.library
                     - com.athena.my-library
                     - com.athena123.library
                     ...
                pattern: '^[a-z0-9\-]+(\.[a-z0-9\-]+)*$'
                type: string
                example: spa.eqm-processing
            PropertyCreationModel:
                title: PropertyCreationModel
                allOf:
                    -
                        $ref: '#/components/schemas/PropertyBaseModel'
                    -
                        required:
                            - type
                            - value
                        type: object
                        properties:
                            type:
                                required:
                                    - name
                                type: object
                                properties:
                                    name:
                                        $ref: '#/components/schemas/NamespacePatternWithDashes'
            PropertyPatchModel:
                title: PropertyPatchModel
                allOf:
                    -
                        $ref: '#/components/schemas/PropertyBaseModel'
                    -
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                required:
                                    - name
                                type: object
                                properties:
                                    name:
                                        $ref: '#/components/schemas/NamespacePatternWithDashes'
            RoleResponseModel:
                title: Role base model
                type: object
                properties:
                    id:
                        type: string
                    name:
                        type: string
                    description:
                        type: string
                    type:
                        enum:
                            - customer
                            - vendor
                    containerName:
                        type: string
            PermissionBaseModel:
                title: PermissionBaseModel
                type: object
                properties:
                    role:
                        enum:
                            - viewer
                            - collaborator
                            - owner
                        type: string
                    type:
                        enum:
                            - user
                            - everyone
                        type: string
                    value:
                        format: uuid
                        type: string
            EnumeratedLocationTypeModel:
                title: Enumerated location type model
                required:
                    - type
                    - possibleValues
                properties:
                    type:
                        enum:
                            - enumerated
                        type: string
                    possibleValues:
                        type: array
                        items:
                            type: string
            IndexedLocationTypeModel:
                title: Indexed location type model
                required:
                    - type
                properties:
                    type:
                        enum:
                            - indexed
                        type: string
                    minIndexNumber:
                        nullable: true
                        format: int32
                        type: integer
                    maxIndexNumber:
                        nullable: true
                        format: int32
                        type: integer
            RowColumnLocationTypeModel:
                title: Row column location type model
                required:
                    - type
                properties:
                    type:
                        enum:
                            - rowColumn
                        type: string
            ScopeType:
                title: Item type scope enum
                enum:
                    - standard
                    - domain
                    - user
                type: string
                example: standard
            SiteLocationTypeModel:
                title: Site location type model
                required:
                    - type
                properties:
                    type:
                        enum:
                            - site
                        type: string
            XYLocationTypeModel:
                title: XY location type model
                required:
                    - type
                properties:
                    type:
                        enum:
                            - xy
                        type: string
            XYZLocationTypeModel:
                title: XYZ location type model
                required:
                    - type
                properties:
                    type:
                        enum:
                            - xyz
                        type: string
            ActivityBaseModel:
                title: Activity base model
                required:
                    - name
                type: object
                properties:
                    name:
                        type: string
                        example: 'EPU acquisition with eCL #153'
                    description:
                        type: string
                        example: >-
                            This activity represents a new data acquisition from a Thermo Fisher Scientific
                            hardware.
                    parentId:
                        format: uuid
                        description: 'optional, if not at root level'
                        type: string
                        example: 16659ff9-d300-4b25-9d7e-38edd99de7df
            ActivityCleanupRequestCreationModel:
                title: Activity cleanup request creation model
                type: object
                allOf:
                    -
                        required:
                            - activityId
                            - dryRun
                            - rules
                        type: object
                        properties:
                            activityId:
                                format: uuid
                                type: string
                            dryRun:
                                type: boolean
                            rules:
                                type: array
                                items:
                                    format: uuid
                                    type: string
            ActivityCleanupRequestModel:
                title: Activity cleanup request model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/CleanupRequestBaseModel'
                    -
                        required:
                            - activityId
                        type: object
                        properties:
                            activityId:
                                format: uuid
                                type: string
            ActivityTreeDeletionRequestCreationModel:
                title: Activity tree deletion request creation model
                type: object
                allOf:
                    -
                        required:
                            - activityId
                        type: object
                        properties:
                            activityId:
                                format: uuid
                                type: string
            ActivityTreeDeletionRequestModel:
                title: Activity tree deletion request model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/DeletionRequestBaseModel'
                    -
                        required:
                            - activityId
                        type: object
                        properties:
                            activityId:
                                format: uuid
                                type: string
            PropertyDataTypeEnum:
                title: Property type datatype enum
                enum:
                    - integer
                    - double
                    - string
                    - json
                    - datetime
                    - boolean
                    - date
                type: string
                example: double
            PropertyTypeUnitNameEnum:
                title: Property type unit name enum
                enum:
                    - si.base.length
                    - si.base.mass
                    - si.base.time
                    - si.base.electric.current
                    - si.base.thermodynamic.temperature
                    - si.base.amountof.substance
                    - si.base.luminous.intensity
                    - si.derived.force
                    - si.derived.weight
                    - si.derived.frequency
                    - si.derived.electric.charge
                    - si.derived.electric.potential
                    - si.derived.electric.conductance
                    - si.derived.inductance
                    - si.derived.capacitance
                    - si.derived.resistance
                    - si.derived.inpedance
                    - si.derived.reactance
                    - si.derived.magnetic.flux
                    - si.derived.magnetic.flux.density
                    - si.derived.energy
                    - si.derived.work
                    - si.derived.heat
                    - si.derived.power
                    - si.derived.radiant.flux
                    - si.derived.angle
                    - si.derived.radioactivity
                    - si.derived.luminous.flux
                type: string
                example: si.base.thermodynamic.temperature
                x-internal: true
            StatusEnum:
                title: Activity status enum
                description: ''
                enum:
                    - Created
                    - Pending
                    - Starting
                    - Started
                    - Pausing
                    - Paused
                    - Aborting
                    - Aborted
                    - Stopping
                    - Stopped
                    - Cancelled
                    - CompletedWithWarnings
                    - CompletedWithErrors
                    - Completed
                    - StartedManuallyRecoverable
                    - FailedManuallyRecoverable
                    - FailedAutomaticallyRecoverable
                    - PendingSample
                    - WaitingForStart
                    - SampleLost
                    - Skipped
                    - WaitingForManualInput
                    - Unset
                type: string
                example: Created
                x-internal: true
            NamespacePattern:
                title: NamespacePattern
                description: |-
                    Should match dot splitted namespaces like:
                     - com
                     - com.athena
                     - com.athena.library
                     - com.athena123.library
                     ...
                pattern: '^[a-z0-9]+(\.[a-z0-9]+)*$'
                type: string
                example: spa.eqm
            SemVerPattern:
                title: SemVerPattern
                description: Should match version core of semantic versioning <major>.<minor>.<patch>
                pattern: '^(([0-9]|[1-9][0-9]*)(\.|\b)){3}$'
                type: string
                example: 1.0.0
            SemVerWithSuffixPattern:
                title: SemVerWithSuffixPattern
                description: Should match version core of semantic versioning <major>.<minor>.<patch>-<suffix>
                pattern: >-
                    ^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$
                type: string
                example: 1.0.0-rc1
            AuthorModel:
                title: Author model
                required:
                    - id
                type: object
                properties:
                    email:
                        format: email
                        type: string
                        example: john.doe@email.com
                    firstname:
                        type: string
                        example: John
                    id:
                        format: uuid
                        type: string
                        readOnly: true
                    lastname:
                        type: string
                        example: Doe
                    registrationDateTime:
                        format: date-time
                        type: string
            Date:
                title: Date
                description: Define value of date
                pattern: '2020-07-10'
                type: string
            DateTime:
                title: DateTime
                description: Define value of datetime based on ISO 8601
                pattern: '2020-07-10T15:00:00.000Z'
                type: string
            ObjectDateTimeModel:
                title: ObjectDateTimeModel
                required:
                    - createdDateTime
                type: object
                properties:
                    createdDateTime:
                        format: date-time
                        type: string
                        example: '2019-08-24T14:15:22Z'
                    updatedDateTime:
                        format: date-time
                        type: string
                        example: '2019-08-24T16:20:36Z'
            ObjectListReponseModel:
                title: List response model
                allOf:
                    -
                        $ref: '#/components/schemas/ObjectResponseModel'
                    -
                        $ref: '#/components/schemas/PaginationModel'
            ObjectResponseModel:
                description: ''
                type: object
            PaginationModel:
                title: PaginationModel
                required:
                    - pageCount
                    - pageNumber
                    - pageSize
                    - objectCount
                type: object
                properties:
                    pageCount:
                        minimum: 0
                        type: integer
                        example: 5
                    pageNumber:
                        minimum: 1
                        type: integer
                        example: 2
                    pageSize:
                        minimum: 0
                        type: integer
                        example: 50
                    objectCount:
                        minimum: 0
                        type: integer
                        example: 246
            IIIFResponseModel:
                title: IIIFResponseModel
                required:
                    - '@context'
                    - id
                    - type
                    - protocol
                    - profile
                    - width
                    - height
                type: object
                properties:
                    '@context':
                        description: The @context tells Linked Data processors how to interpret the image information.
                        type: string
                    id:
                        format: uri
                        description: >-
                            The base URI of the image as defined in URI Syntax, including scheme, server, prefix
                            and identifier without a trailing slash.
                        type: string
                    type:
                        description: The type for the Image API.
                        enum:
                            - ImageService3
                        type: string
                    protocol:
                        format: uri
                        description: >-
                            The URI http://iiif.io/api/image which can be used to determine that the document
                            describes an image service which is a version of the IIIF Image API.
                        enum:
                            - 'http://iiif.io/api/image'
                        type: string
                    profile:
                        description: >-
                            A string indicating the highest compliance level which is fully supported by the
                            service.
                        enum:
                            - level0
                            - level1
                            - level2
                        type: string
                    width:
                        description: The width in pixels of the full image.
                        type: number
                    height:
                        description: The height in pixels of the full image.
                        type: number
                    maxWidth:
                        description: The maximum width in pixels supported for this image.
                        type: number
                    maxHeight:
                        description: The maximum height in pixels supported for this image.
                        type: number
                    maxArea:
                        description: The maximum area in pixels supported for this image.
                        type: number
            ConfigurationModel:
                title: ConfigurationModel
                required:
                    - processors
                type: object
                properties:
                    processors:
                        type: array
                        items:
                            $ref: '#/components/schemas/ProcessorModel'
            ProcessorModel:
                title: ProcessorModel
                required:
                    - name
                type: object
                properties:
                    name:
                        type: string
            FeatureLicenseModel:
                title: FeatureLicenseModel
                type: object
                properties:
                    feature:
                        type: string
                    vendorString:
                        type: string
                    version:
                        type: string
                    tokens:
                        type: object
                        properties:
                            issued:
                                format: int32
                                type: integer
                            inUse:
                                format: int32
                                type: integer
                    uncounted:
                        type: boolean
            FeatureLicenseResponseModel:
                title: FeatureLicenseResponseModel
                allOf:
                    -
                        $ref: '#/components/schemas/FeatureLicenseModel'
            FileBaseModel:
                title: FileBaseModel
                type: object
                properties:
                    contentType:
                        type: string
                        example: image/mrc
                    extension:
                        type: string
                        example: mrc
                    name:
                        description: unique per parent
                        type: string
                        example: foilhole_4311
            FileCreationModel:
                title: File creation model
                description: ''
                allOf:
                    -
                        $ref: '#/components/schemas/FileBaseModel'
                    -
                        oneOf:
                            -
                                required:
                                    - path
                                type: object
                                properties:
                                    path:
                                        type: string
                                    deletionPolicy:
                                        description: >-
                                            Delete or retain the offloaded file binary when the associated file
                                            resource is deleted. Default value is delete.
                                        enum:
                                            - delete
                                            - retain
                                        type: string
                                    properties:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PropertyCreationModel'
                            -
                                required:
                                    - binary
                                type: object
                                properties:
                                    binary:
                                        format: binary
                                        type: string
                                    properties:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PropertyCreationModel'
                    -
                        required:
                            - contentType
                            - extension
                            - name
            FilePatchModel:
                title: File patch model
                description: ''
                allOf:
                    -
                        $ref: '#/components/schemas/FileBaseModel'
                    -
                        type: object
                        properties:
                            properties:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyPatchModel'
            FilePermissionResponseModel:
                description: ''
                type: object
            FolderBaseModel:
                title: Folder base model
                type: object
                properties:
                    displayName:
                        type: string
                    description:
                        type: string
                    parentId:
                        format: uuid
                        type: string
            FolderCleanupRequestCreationModel:
                title: Folder cleanup request creation model
                type: object
                allOf:
                    -
                        required:
                            - folderId
                            - dryRun
                            - rules
                        type: object
                        properties:
                            folderId:
                                format: uuid
                                type: string
                            dryRun:
                                type: boolean
                            rules:
                                type: array
                                items:
                                    format: uuid
                                    type: string
            FolderCleanupRequestModel:
                title: Folder cleanup request model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/CleanupRequestBaseModel'
                    -
                        required:
                            - folderId
                        type: object
                        properties:
                            folderId:
                                format: uuid
                                type: string
            FolderResponseModel:
                title: FolderResponseModel
                allOf:
                    -
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the folder
                                type: string
                    -
                        $ref: '#/components/schemas/FolderBaseModel'
                    -
                        required:
                            - displayName
                    -
                        required:
                            - author
                            - createdDateTime
                        type: object
                        properties:
                            lifecycleState:
                                description: |
                                    Possible values:
                                    - deleting
                                enum:
                                    - deleting
                                type: string
                            properties:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyResponseModel'
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                            createdDateTime:
                                format: date-time
                                type: string
                            updatedDateTime:
                                format: date-time
                                type: string
            FolderTreeDeletionRequestCreationModel:
                title: Folder tree deletion request creation model
                type: object
                allOf:
                    -
                        required:
                            - folderId
                        type: object
                        properties:
                            folderId:
                                format: uuid
                                type: string
            FolderTreeDeletionRequestModel:
                title: Folder tree deletion request model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/DeletionRequestBaseModel'
                    -
                        required:
                            - folderId
                        type: object
                        properties:
                            folderId:
                                format: uuid
                                type: string
            UserResponseModel:
                title: User base model
                required:
                    - id
                    - userName
                    - identity
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    userName:
                        minLength: 1
                        type: string
                    firstName:
                        type: string
                    lastName:
                        type: string
                    email:
                        format: email
                        type: string
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        format: date-time
                        type: string
                    identity:
                        type: object
                        properties:
                            identity:
                                minLength: 1
                                type: string
                            providerType:
                                enum:
                                    - local
                                    - federated
                    roles:
                        type: array
                        items:
                            $ref: '#/components/schemas/RoleResponseModel'
            CleanupRequestBaseModel:
                title: Cleanup request base model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/RequestBaseModel'
                    -
                        required:
                            - dryRun
                        type: object
                        properties:
                            dryRun:
                                type: boolean
                            result:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        rules:
                                            type: array
                                            items:
                                                format: uuid
                                                type: string
                                        totalCount:
                                            type: integer
                                        totalSize:
                                            type: integer
            DeletionRequestBaseModel:
                title: Deletion request base model
                type: object
                allOf:
                    -
                        $ref: '#/components/schemas/RequestBaseModel'
            RequestBaseModel:
                title: Request base model
                required:
                    - id
                    - status
                    - createdDateTime
                    - author
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    status:
                        enum:
                            - notStarted
                            - inProgress
                            - suspended
                            - completed
                            - cancelled
                        type: string
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        format: date-time
                        type: string
                    author:
                        $ref: '#/components/schemas/AuthorModel'
                    progress:
                        type: object
                        properties:
                            total:
                                type: integer
                            processed:
                                type: integer
                            skipped:
                                type: integer
            PropertyResponseModel:
                title: PropertyResponseModel
                allOf:
                    -
                        $ref: '#/components/schemas/PropertyBaseModel'
                    -
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                $ref: '#/components/schemas/PropertyTypeResponseBaseModel'
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                    -
                        $ref: '#/components/schemas/ObjectDateTimeModel'
            PropertyTypeCreationBaseModel:
                title: PropertyTypeCreationBaseModel
                description: ''
                type: object
                allOf:
                    -
                        required:
                            - displayName
                            - dataType
                        properties:
                            displayName:
                                type: string
                            description:
                                type: string
                            dataType:
                                $ref: '#/components/schemas/PropertyDataTypeEnum'
                            quantityCode:
                                description: Code of the quantity
                                type: string
                                example: Temperature
                            defaultUnitCode:
                                description: Default unit code
                                type: string
                                example: Kelvin
            PropertyTypeCreationModel:
                oneOf:
                    -
                        allOf:
                            -
                                $ref: '#/components/schemas/PropertyTypeCreationBaseModel'
                            -
                                oneOf:
                                    -
                                        required:
                                            - possibleValues
                                        type: object
                                        properties:
                                            possibleValues:
                                                minItems: 1
                                                uniqueItems: true
                                                type: array
                                                items:
                                                    oneOf:
                                                        -
                                                            type: string
                                                        -
                                                            type: number
                                    -
                                        required:
                                            - range
                                        type: object
                                        properties:
                                            range:
                                                $ref: '#/components/schemas/PropertyTypeRangeModel'
                    -
                        $ref: '#/components/schemas/PropertyTypeCreationBaseModel'
                title: PropertyTypeCreationModel
                description: ''
            PropertyTypeRangeModel:
                anyOf:
                    -
                        properties:
                            lower:
                                $ref: '#/components/schemas/PropertyTypeRangeValue'
                    -
                        properties:
                            upper:
                                $ref: '#/components/schemas/PropertyTypeRangeValue'
                title: PropertyTypeRangeModel
                type: object
            PropertyTypeResponseBaseModel:
                $ref: '#/components/schemas/PropertyTypeBaseModel'
                title: PropertyTypeResponseBaseModel
            PropertyTypeResponseModel:
                oneOf:
                    -
                        allOf:
                            -
                                $ref: '#/components/schemas/PropertyTypeResponseBaseModel'
                            -
                                oneOf:
                                    -
                                        required:
                                            - possibleValues
                                        type: object
                                        properties:
                                            possibleValues:
                                                minItems: 1
                                                uniqueItems: true
                                                type: array
                                                items:
                                                    oneOf:
                                                        -
                                                            type: string
                                                        -
                                                            type: number
                                    -
                                        required:
                                            - range
                                        type: object
                                        properties:
                                            range:
                                                $ref: '#/components/schemas/PropertyTypeRangeModel'
                    -
                        $ref: '#/components/schemas/PropertyTypeResponseBaseModel'
                        additionalProperties: false
                title: PropertyTypeResponseModel
            PropertyTypeSelectionModel:
                oneOf:
                    -
                        required:
                            - id
                        properties:
                            id:
                                format: uuid
                                type: string
                        additionalProperties: false
                    -
                        required:
                            - name
                        properties:
                            name:
                                $ref: '#/components/schemas/NamespacePatternWithDashes'
                        additionalProperties: false
                title: PropertyTypeSelectionModel
                type: object
            PropertyUnitModel:
                title: PropertyUnitModel
                required:
                    - name
                    - label
                    - symbol
                type: object
                properties:
                    name:
                        $ref: '#/components/schemas/PropertyTypeUnitNameEnum'
                    label:
                        type: string
                        example: angström
                    symbol:
                        type: string
                        example: Å
            PlatformVersionModel:
                title: PlatformVersionModel
                required:
                    - platform
                    - api
                type: object
                properties:
                    platform:
                        $ref: '#/components/schemas/SemVerWithSuffixPattern'
                    api:
                        type: array
                        items:
                            type: string
                            example: v1
            PermissionCreationModel:
                title: PermissionCreationModel
                required:
                    - role
                    - type
                allOf:
                    -
                        $ref: '#/components/schemas/PermissionBaseModel'
            PropertyTypeManifestCreationModel:
                title: Property Type Manifest Post Model
                description: Property Type Manifest Post Model
                required:
                    - version
                    - scope
                    - typeName
                    - dataType
                    - displayName
                type: object
                properties:
                    version:
                        $ref: '#/components/schemas/SemVerPattern'
                        description: Schema version of the manifest
                    displayName:
                        type: string
                        example: CPU die size
                    description:
                        type: string
                        example: CPU size of the die
                    dataType:
                        $ref: '#/components/schemas/PropertyDataTypeEnum'
                    typeVersion:
                        $ref: '#/components/schemas/SemVerPattern'
                        description: Schema version of the manifest
                    scope:
                        enum:
                            - application
                        type: string
                    typeName:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
                    quantity:
                        type: string
            HATEOASLinkModel:
                title: HATEOASLinkModel
                required:
                    - id
                    - type
                    - relationship
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    location:
                        format: uri
                        type: string
                    type:
                        $ref: '#/components/schemas/LinkRelationshipType'
                    relationship:
                        enum:
                            - source
                            - target
                        type: string
                    remote:
                        type: object
                        properties:
                            id:
                                format: uuid
                                type: string
                            location:
                                format: uri
                                type: string
                            object:
                                enum:
                                    - activity
                                    - file
                                    - folder
                                type: string
            LinkCreationModel:
                title: LinkCreationModel
                type: object
                properties:
                    sourceId:
                        format: uuid
                        type: string
                    targetId:
                        format: uuid
                        type: string
                    type:
                        $ref: '#/components/schemas/LinkRelationshipType'
            LinkRelationshipType:
                enum:
                    - relatesTo
                    - isSourceOf
                type: string
            AbstractLocationType:
                oneOf:
                    -
                        $ref: '#/components/schemas/IndexedLocationTypeModel'
                    -
                        $ref: '#/components/schemas/EnumeratedLocationTypeModel'
                    -
                        $ref: '#/components/schemas/RowColumnLocationTypeModel'
                    -
                        $ref: '#/components/schemas/XYLocationTypeModel'
                    -
                        $ref: '#/components/schemas/XYZLocationTypeModel'
                    -
                        $ref: '#/components/schemas/SiteLocationTypeModel'
                title: Abstract item type location type model
            ItemTypeBaseModel:
                title: Item type base model
                required:
                    - name
                    - category
                    - status
                    - displayName
                type: object
                properties:
                    name:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
                    displayName:
                        type: string
                    description:
                        nullable: true
                        type: string
                    status:
                        $ref: '#/components/schemas/StatusType'
                    category:
                        $ref: '#/components/schemas/ItemTypeCategoryModel'
                    supportedLocation:
                        $ref: '#/components/schemas/AbstractLocationType'
                    possibleContainers:
                        type: array
                        items:
                            $ref: '#/components/schemas/ItemTypeReferenceResponseModel'
                    possibleOrigins:
                        type: array
                        items:
                            $ref: '#/components/schemas/ItemTypeReferenceResponseModel'
                    properties:
                        type: array
                        items:
                            $ref: '#/components/schemas/ItemTypePropertyResponseModel'
            ItemTypeCategoryModel:
                title: Item type category model
                required:
                    - name
                    - displayName
                type: object
                properties:
                    name:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
                    version:
                        $ref: '#/components/schemas/SemVerPattern'
                    displayName:
                        type: string
                    description:
                        type: string
                    parentCategory:
                        $ref: '#/components/schemas/ItemTypeParentCategoryModel'
            ItemTypeCategoryResponseModel:
                title: Item type category response model
                allOf:
                    -
                        $ref: '#/components/schemas/ItemTypeCategoryModel'
            ItemTypeParentCategoryModel:
                title: Item type parent category model
                required:
                    - name
                    - displayName
                type: object
                properties:
                    name:
                        $ref: '#/components/schemas/NamespacePattern'
                    displayName:
                        type: string
                    description:
                        type: string
            ItemTypePropertyResponseModel:
                title: Item type property
                properties:
                    type:
                        $ref: '#/components/schemas/PropertyTypeCreationBaseModel'
                    required:
                        default: false
                        type: boolean
                    readOnly:
                        default: false
                        type: boolean
                    inheritable:
                        default: false
                        type: boolean
                    defaultValue:
                        nullable: true
                        type: string
            ItemTypeReferenceResponseModel:
                title: Item type reference model
                type: object
                properties:
                    typeName:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
            ItemTypeResponseModel:
                title: Item type response model
                allOf:
                    -
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the item type
                                type: string
                                readOnly: true
                                example: a344a742-25c4-4867-8ebf-c521a565a1c9
                    -
                        $ref: '#/components/schemas/ItemTypeBaseModel'
                    -
                        required:
                            - version
                            - scope
                            - createdDateTime
                        type: object
                        properties:
                            version:
                                $ref: '#/components/schemas/SemVerPattern'
                            scope:
                                $ref: '#/components/schemas/ScopeType'
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                            createdDateTime:
                                format: date-time
                                type: string
                    -
                        $ref: '#/components/schemas/ObjectDateTimeModel'
            StatusType:
                title: Item type status enum
                enum:
                    - draft
                    - published
                    - deleted
                type: string
                example: published
            AbstractItemLocationModel:
                oneOf:
                    -
                        $ref: '#/components/schemas/IndexedLocationModel'
                    -
                        $ref: '#/components/schemas/EnumeratedLocationModel'
                    -
                        $ref: '#/components/schemas/RowColumnLocationModel'
                    -
                        $ref: '#/components/schemas/XYLocationModel'
                    -
                        $ref: '#/components/schemas/XYZLocationModel'
                    -
                        $ref: '#/components/schemas/SiteLocationModel'
                title: Abstract item location model
            EnumeratedLocationModel:
                title: Enumerated location model
                required:
                    - containerId
                    - type
                    - ''
                type: object
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - enumerated
                        type: string
                    name:
                        nullable: false
                        type: string
            IndexedLocationModel:
                title: Indexed location model
                required:
                    - containerId
                    - type
                    - indexNumber
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - indexed
                        type: string
                    indexNumber:
                        format: int32
                        type: integer
            ItemBaseModel:
                title: Item base model
                required:
                    - displayName
                type: object
                properties:
                    displayName:
                        description: Display name of the item
                        type: string
                    description:
                        type: string
                    parentId:
                        format: uuid
                        description: Identifier of the activity from which the item is the result
                        type: string
                    originId:
                        format: uuid
                        description: Identifier of the item from which the item is originated
                        type: string
                    location:
                        $ref: '#/components/schemas/AbstractItemLocationModel'
            ItemCreationModel:
                title: Item Post Model
                description: Item Post Model
                allOf:
                    -
                        $ref: '#/components/schemas/ItemBaseModel'
                    -
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                $ref: '#/components/schemas/ItemTypeSelectionModel'
                            properties:
                                nullable: true
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyCreationModel'
            ItemPatchModel:
                title: ItemPatchModel
                type: object
                properties:
                    displayName:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    parentId:
                        format: uuid
                        type: string
                    location:
                        $ref: '#/components/schemas/AbstractItemLocationModel'
                    properties:
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyPatchModel'
            ItemPermissionResponseModel:
                title: ItemPermissionResponseModel
                required:
                    - id
                    - role
                    - type
                allOf:
                    -
                        $ref: '#/components/schemas/PermissionBaseModel'
                    -
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the item permission
                                type: string
                            createdDateTime:
                                format: date-time
                                type: string
                            inheritedFrom:
                                type: object
                                properties:
                                    id:
                                        format: uuid
                                        type: string
                                    object:
                                        enum:
                                            - activity
                                            - folder
                                        type: string
            ItemResponseModel:
                title: Item response model
                description: ''
                allOf:
                    -
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the item
                                type: string
                                readOnly: true
                                example: a344a742-25c4-4867-8ebf-c521a565a1c9
                    -
                        $ref: '#/components/schemas/ItemBaseModel'
                    -
                        required:
                            - author
                            - type
                            - createdDateTime
                            - updatedDateTime
                        type: object
                        properties:
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                            type:
                                $ref: '#/components/schemas/ItemTypeLiteModel'
                            properties:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyResponseModel'
                            createdDateTime:
                                format: date-time
                                type: string
                            updatedDateTime:
                                format: date-time
                                type: string
                    -
                        $ref: '#/components/schemas/ObjectDateTimeModel'
            ItemTypeLiteModel:
                title: Item Type lite model
                description: Item Type lite model
                required:
                    - id
                    - name
                    - version
                    - displayName
                    - category
                properties:
                    id:
                        format: uuid
                        description: Identifier of the item type
                        type: string
                    name:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
                        description: Name of the item type
                    version:
                        $ref: '#/components/schemas/SemVerPattern'
                        description: Version of the item type
                    displayName:
                        description: Display name of the item type
                        type: string
                    category:
                        $ref: '#/components/schemas/ItemTypeCategoryModel'
            RowColumnLocationModel:
                title: RowColumn location model
                required:
                    - containerId
                    - type
                    - row
                    - col
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - rowColumn
                        type: string
                    row:
                        type: string
                    col:
                        type: string
            SiteLocationModel:
                title: Site location model
                required:
                    - containerId
                    - type
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - site
                        type: string
                    name:
                        type: string
                    x:
                        format: float
                        type: number
                    'y':
                        format: float
                        type: number
                    z:
                        format: float
                        type: number
                    rotation:
                        format: float
                        type: number
                    tiltAlpha:
                        format: float
                        type: number
                    tiltBeta:
                        format: float
                        type: number
            XYLocationModel:
                title: XY location model
                required:
                    - containerId
                    - type
                    - x
                    - 'y'
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - xy
                        type: string
                    x:
                        format: float
                        type: number
                    'y':
                        format: float
                        type: number
            XYZLocationModel:
                title: XYZ location model
                required:
                    - containerId
                    - type
                    - x
                    - 'y'
                    - z
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        enum:
                            - xyz
                        type: string
                    x:
                        format: float
                        type: number
                    'y':
                        format: float
                        type: number
                    z:
                        format: float
                        type: number
            FolderCreationModel:
                title: FolderCreationModel
                allOf:
                    -
                        $ref: '#/components/schemas/FolderBaseModel'
                    -
                        type: object
                        properties:
                            properties:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyCreationModel'
                    -
                        required:
                            - displayName
            FolderPatchModel:
                title: FolderPatchModel
                allOf:
                    -
                        $ref: '#/components/schemas/FolderBaseModel'
                    -
                        type: object
                        properties:
                            properties:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyPatchModel'
            FolderPermissionResponseModel:
                title: FolderPermissionResponseModel
                required:
                    - id
                    - role
                    - type
                allOf:
                    -
                        $ref: '#/components/schemas/PermissionBaseModel'
                    -
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the folder permission
                                type: string
                            createdDateTime:
                                format: date-time
                                type: string
                            inheritedFrom:
                                type: object
                                properties:
                                    id:
                                        format: uuid
                                        type: string
                                    object:
                                        enum:
                                            - folder
                                        type: string
            ActivityPatchModel:
                title: ActivityPatchModel
                type: object
                properties:
                    name:
                        type: string
                        example: 'EPU acquisition with eCL #154'
                    description:
                        nullable: true
                        type: string
                        example: >-
                            This activity represents a new data acquisition from a Thermo Fisher Scientific
                            hardware.
                    status:
                        $ref: '#/components/schemas/StatusEnum'
                    properties:
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyPatchModel'
            ActivityCreationModel:
                title: Activity creation model
                allOf:
                    -
                        $ref: '#/components/schemas/ActivityBaseModel'
                    -
                        required:
                            - type
                        type: object
                        properties:
                            type:
                                $ref: '#/components/schemas/ActivityTypeSelectionModel'
                            status:
                                $ref: '#/components/schemas/StatusEnum'
                            properties:
                                description: Limited to 500 properties
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyCreationModel'
            ActivityPermissionResponseModel:
                title: ActivityPermissionResponseModel
                required:
                    - id
                    - role
                    - type
                allOf:
                    -
                        $ref: '#/components/schemas/PermissionBaseModel'
                    -
                        type: object
                        properties:
                            id:
                                format: uuid
                                description: Identifier of the activity permission
                                type: string
                            createdDateTime:
                                format: date-time
                                type: string
                            inheritedFrom:
                                type: object
                                properties:
                                    id:
                                        format: uuid
                                        type: string
                                    object:
                                        enum:
                                            - activity
                                            - folder
                                        type: string
            ActivityTypeModel:
                title: Activity type model
                required:
                    - name
                    - version
                type: object
                properties:
                    displayName:
                        type: string
                        example: EPU run with eCL enabled
                    id:
                        format: uuid
                        type: string
                        readOnly: true
                        example: f7febb6c-1c56-4a78-9d86-b60ec14fa41a
                    name:
                        $ref: '#/components/schemas/NamespacePattern'
                    version:
                        $ref: '#/components/schemas/SemVerPattern'
            ActivityTypeSelectionModel:
                oneOf:
                    -
                        required:
                            - id
                        properties:
                            id:
                                type: string
                        additionalProperties: false
                    -
                        required:
                            - name
                        properties:
                            name:
                                $ref: '#/components/schemas/NamespacePattern'
                            version:
                                $ref: '#/components/schemas/SemVerPattern'
                        additionalProperties: false
                title: ActivityTypeSelectionModel
                type: object
            ItemLocationResponseModel:
                title: Item location response model
                required:
                    - id
                    - itemId
                    - startDateTime
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    itemId:
                        format: uuid
                        description: Identifier of the contained item
                        type: string
                    location:
                        $ref: '#/components/schemas/AbstractItemLocationModel'
                    startDateTime:
                        format: date-time
                        type: string
                    endDateTime:
                        format: date-time
                        type: string
                additionalProperties: false
            ItemTypeSelectionModel:
                oneOf:
                    -
                        required:
                            - id
                        properties:
                            id:
                                type: string
                        additionalProperties: false
                    -
                        required:
                            - name
                        properties:
                            name:
                                $ref: '#/components/schemas/NamespacePattern'
                            version:
                                $ref: '#/components/schemas/SemVerPattern'
                        additionalProperties: false
                title: ItemTypeSelectionModel
                type: object
            LinkResponseModel:
                title: LinkResponseModel
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    source:
                        type: object
                        properties:
                            id:
                                format: uuid
                                type: string
                            object:
                                enum:
                                    - activity
                                    - folder
                                    - file
                                    - item
                    target:
                        type: object
                        properties:
                            id:
                                format: uuid
                                type: string
                            object:
                                enum:
                                    - activity
                                    - folder
                                    - file
                                    - item
                    type:
                        $ref: '#/components/schemas/LinkRelationshipType'
                    author:
                        $ref: '#/components/schemas/AuthorModel'
                    createdDateTime:
                        format: date-time
                        type: string
                        example: '2019-08-24T16:20:36Z'
            PropertyTypeRangeValue:
                title: PropertyTypeRangeValue
                required:
                    - isInclusive
                    - value
                type: object
                properties:
                    isInclusive:
                        type: boolean
                    value:
                        oneOf:
                            -
                                type: string
                            -
                                $ref: '#/components/schemas/DateTime'
                            -
                                $ref: '#/components/schemas/Date'
            PropertyTypeBaseModel:
                title: PropertyTypeBaseModel
                required:
                    - name
                    - displayName
                    - dataType
                    - createdDateTime
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                        readOnly: true
                        example: 01299d63-8d21-46dc-8612-3bdb21c99e10
                    name:
                        $ref: '#/components/schemas/NamespacePatternWithDashes'
                    version:
                        $ref: '#/components/schemas/SemVerPattern'
                    displayName:
                        type: string
                        example: CPU die size
                    description:
                        type: string
                        example: CPU size of the die
                    group:
                        type: string
                    dataType:
                        $ref: '#/components/schemas/PropertyDataTypeEnum'
                    quantityCode:
                        type: string
                        example: Temperature
                    defaultUnitCode:
                        type: string
                        example: Kelvin
                    createdDateTime:
                        format: date-time
                        type: string
                        example: '2019-08-24T16:20:36Z'
            ActivityResponseModel:
                title: Activity response model
                description: ''
                allOf:
                    -
                        required:
                            - id
                        type: object
                        properties:
                            id:
                                format: uuid
                                type: string
                                readOnly: true
                                example: a344a742-25c4-4867-8ebf-c521a565a1c8
                    -
                        $ref: '#/components/schemas/ActivityBaseModel'
                    -
                        required:
                            - author
                            - status
                            - type
                        type: object
                        properties:
                            lifecycleState:
                                description: |
                                    Possible values:
                                    - deleting
                                enum:
                                    - deleting
                                type: string
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                            status:
                                $ref: '#/components/schemas/StatusEnum'
                            type:
                                $ref: '#/components/schemas/ActivityTypeModel'
                            properties:
                                description: Limited to 500 properties
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyResponseModel'
                            _links:
                                description: Limited to 500 links
                                type: array
                                items:
                                    $ref: '#/components/schemas/HATEOASLinkModel'
                    -
                        $ref: '#/components/schemas/ObjectDateTimeModel'
            FileResponseModel:
                title: File response model
                description: ''
                required:
                    - contentType
                    - extension
                    - name
                allOf:
                    -
                        $ref: '#/components/schemas/FileBaseModel'
                    -
                        required:
                            - id
                            - size
                            - author
                        type: object
                        properties:
                            id:
                                format: uuid
                                type: string
                                example: d028c4fa-9616-4092-ba59-079ff5e24c0c
                            parentId:
                                format: uuid
                                description: if not specified in the API route
                                type: string
                                example: a344a742-25c4-4867-8ebf-c521a565a1c8
                            lifecycleState:
                                description: |
                                    Possible values:
                                    - deleting
                                enum:
                                    - deleting
                                type: string
                            size:
                                type: number
                                readOnly: true
                                example: 102400
                            author:
                                $ref: '#/components/schemas/AuthorModel'
                            properties:
                                description: Limited to 500 properties
                                type: array
                                items:
                                    $ref: '#/components/schemas/PropertyResponseModel'
                            path:
                                description: Path to the file if offloaded
                                type: string
                                example: /offload/20212001/sample.png
                            _links:
                                description: Limited to 500 links
                                type: array
                                items:
                                    $ref: '#/components/schemas/HATEOASLinkModel'
                    -
                        $ref: '#/components/schemas/ObjectDateTimeModel'
            CountAggregateResponseModel:
                title: value aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - count
                                type: string
                            count:
                                format: long
                                description: Count of the documents in the bucket
                                type: number
            DictionaryAggregateResponseModel:
                title: DateHistogram bucket aggregate response model
                allOf:
                    -
                        $ref: '#/components/schemas/AggregateBaseResponseModel'
                    -
                        type: object
                        properties:
                            type:
                                enum:
                                    - dictionary
                                type: string
                            items:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        key:
                                            type: string
                                        count:
                                            format: long
                                            type: number
        responses:
            LinkFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/LinkResponseModel'
                                object:
                                    enum:
                                        - link
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/LinkExample'
                links:
                    GetLinkById:
                        operationId: get-link
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /links/{uuid}`.
                    DeleteLinkById:
                        operationId: delete-link
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `DELETE
                            /links/{uuid}`.
                description: Successful operation
            IIIFFetchResponse:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/IIIFResponseModel'
                        examples:
                            example:
                                $ref: '#/components/examples/IIIFExample'
                description: Successful operation
            ActivityPermissionFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ActivityPermissionResponseModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionExample'
                description: Successful operation
            ActivityPermissionsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityPermissionResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionsExample'
                description: Successful operation
            ActivityTreeDeletionRequestFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ActivityTreeDeletionRequestModel'
                                object:
                                    enum:
                                        - activityTreeDeletionRequest
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ActivityTreeDeletionRequestExample'
                description: Successful operation
            ActivityCleanupRequestFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ActivityCleanupRequestModel'
                                object:
                                    enum:
                                        - activityCleanupRequest
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ActivityCleanupRequestExample'
                description: Successful operation
            ActivityCleanupRequestsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityCleanupRequestModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - activityCleanupRequest
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ActivityCleanupRequestsExample'
                description: Successful operation
            FolderTreeDeletionRequestFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FolderTreeDeletionRequestModel'
                                object:
                                    enum:
                                        - folderTreeDeletionRequest
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/FolderTreeDeletionRequestExample'
                description: Successful operation
            ItemPermissionFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ItemPermissionResponseModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionExample'
                description: Successful operation
            ItemPermissionsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ItemPermissionResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionsExample'
                description: Successful operation
            FilePermissionFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FilePermissionResponseModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionExample'
                description: Successful operation
            FilePermissionsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/FilePermissionResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionsExample'
                description: Successful operation
            ActivityFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ActivityResponseModel'
                                object:
                                    enum:
                                        - activity
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ActivityExample'
                links:
                    GetActivityById:
                        operationId: get-activity
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /activities/{uuid}`.
                    PatchActivityById:
                        operationId: patch-activity-uuid
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `PATCH
                            /activities/{uuid}`.
                    PostFileInActivityById:
                        operationId: post-activity-files
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `POST
                            /activities/{uuid}/files`.
                description: Successful operation
            Error400BadRequest:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Bad request
            Error401Unauthorized:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Unauthorized
            Error403Forbidden:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Forbidden
            Error404NotFound:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: NotFound
            Error409Conflict:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Conflict
            Error413TooLarge:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Payload Too Large
            Error415UnsupportedMediaType:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Unsupported Media Type
            Error500InternalError:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ErrorStatusResponse'
                        examples:
                            example:
                                $ref: '#/components/examples/ErrorExample'
                description: Internal Error
            FilesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/FileResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - file
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/FilesFetchExample'
                description: Successful operation
            FileFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FileResponseModel'
                                object:
                                    enum:
                                        - file
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/FileExample'
                links:
                    GetFileById:
                        operationId: get-file
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /files/{uuid}`.
                    GetFileBinaryById:
                        operationId: get-file-binary
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /files/{uuid}/binary`.
                    PatchFileById:
                        operationId: patch-file
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `PATCH
                            /files/{uuid}`.
                    DeleteFileById:
                        operationId: delete-file
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `DELETE
                            /files/{uuid}`.
                description: Successful operation
            FoldersFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/FolderResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - folder
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/FoldersExample'
                description: Successful operation
            FolderFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FolderResponseModel'
                                object:
                                    enum:
                                        - folder
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/FolderExample'
                links:
                    GetFolderById:
                        operationId: get-folder
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /folders/{uuid}`.
                    PatchFolderById:
                        operationId: patch-folder
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `PATCH
                            /folders/{uuid}`.
                    GetFolderPermissionById:
                        operationId: get-folder-permissions
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /folders/{uuid}/permissions`.
                    DeleteFolderPermissionById:
                        operationId: delete-folder-permission
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `DELETE
                            /folders/{uuid}/permissions/{permissionId}`.
                description: Successful operation
            FolderPermissionFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FolderPermissionResponseModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionExample'
                description: Successful operation
            FolderPermissionsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/FolderPermissionResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - permission
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/PermissionsExample'
                description: Successful operation
            ActivitiesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - activity
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ActivitiesExample'
                description: Successful operation
            ConfigurationResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ConfigurationModel'
                                object:
                                    enum:
                                        - configuration
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ConfigurationExample'
                description: Successful operation
            UserFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/UserResponseModel'
                                object:
                                    enum:
                                        - user
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/UserExample'
                description: Successful operation
            RolesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/RoleResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - role
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/RolesExample'
                description: Successful operation
            UsersFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/UserResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - user
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/UsersExample'
                description: Successful operation
            PropertyTypeFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/PropertyTypeResponseModel'
                                object:
                                    enum:
                                        - propertyType
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/PropertyTypeExample'
                links:
                    DeletePropertyTypeById:
                        operationId: delete-property-types-uuid
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `DELETE
                            /property-types/{uuid}`.
                description: Successful operation
            PropertyTypesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/PropertyTypeResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - propertyType
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/PropertyTypesExample'
                description: Successful operation
            FeatureLicenseFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/FeatureLicenseResponseModel'
                                object:
                                    enum:
                                        - featureLicense
                                    type: string
                        examples:
                            example-1:
                                $ref: '#/components/examples/FeatureLicenseExample'
                description: Successful operation
            ItemTypeCategoriesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ItemTypeCategoryResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - itemTypeCategory
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemTypeCategoriesExample'
                description: Successful operation
            ItemFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ItemResponseModel'
                                object:
                                    enum:
                                        - item
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemExample'
                links:
                    GetItemById:
                        operationId: get-item
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `GET
                            /items/{uuid}`.
                    PatchItemById:
                        operationId: patch-item
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `PATCH
                            /items/{uuid}`.
                    DeleteItemById:
                        operationId: delete-item
                        parameters:
                            uuid: '$response.body#/data/id'
                        description: >
                            The `id` value returned in the response can be used as the `uuid` parameter in `DELETE
                            /items/{uuid}`.
                description: Successful operation
            ItemsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ItemResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - item
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemsExample'
                description: Successful operation
            ItemLocationsFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ItemLocationResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - itemLocation
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemLocationsExample'
                description: Successful operation
            ItemTypeFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - object
                            type: object
                            properties:
                                data:
                                    $ref: '#/components/schemas/ItemTypeResponseModel'
                                object:
                                    enum:
                                        - itemType
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemTypeExample'
                description: Successful operation
            ItemTypesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ItemTypeResponseModel'
                                pagination:
                                    $ref: '#/components/schemas/PaginationModel'
                                object:
                                    enum:
                                        - itemType
                                    type: string
                        examples:
                            example:
                                $ref: '#/components/examples/ItemTypesExample'
                description: Successful operation
            SearchActivitiesFetchResponse:
                content:
                    application/json:
                        schema:
                            required:
                                - data
                                - pagination
                                - aggregations
                                - object
                            type: object
                            properties:
                                data:
                                    type: array
                                    items:
                                        title: Activity search response model
                                        description: ''
                                        allOf:
                                            -
                                                required:
                                                    - id
                                                type: object
                                                properties:
                                                    id:
                                                        format: uuid
                                                        type: string
                                                        readOnly: true
                                                        example: a344a742-25c4-4867-8ebf-c521a565a1c7
                                aggregations:
                                    type: array
                                    items:
                                        oneOf:
                                            -
                                                $ref: '#/components/schemas/ValueAggregateResponseModel'
                                            -
                                                $ref: '#/components/schemas/CountAggregateResponseModel'
                                            -
                                                $ref: '#/components/schemas/DictionaryAggregateResponseModel'
                                            -
                                                $ref: '#/components/schemas/PercentilesAggregateResponseModel'
                                        discriminator:
                                            propertyName: type
                                pagination:
                                    title: PaginationModel
                                    required:
                                        - pageCount
                                        - pageNumber
                                        - pageSize
                                        - objectCount
                                    type: object
                                    properties:
                                        pageCount:
                                            minimum: 0
                                            type: integer
                                            example: 5
                                        pageNumber:
                                            minimum: 1
                                            type: integer
                                            example: 2
                                        pageSize:
                                            minimum: 0
                                            type: integer
                                            example: 50
                                        objectCount:
                                            minimum: 0
                                            type: integer
                                            example: 246
                                object:
                                    enum:
                                        - activity
                                    type: string
                        examples:
                            example:
                                value:
                                    object: activity
                                    pagination:
                                        pageCount: 5
                                        pageNumber: 2
                                        pageSize: 50
                                        objectCount: 246
                                    data:
                                        -
                                            id: a344a742-25c4-4867-8ebf-c521a565a1c8
                                            name: 'EPU acquisition #153'
                                            description: >-
                                                This activity represents a new data acquisition from a Thermo
                                                Fisher Scientific hardware.
                                            parentId: 16659ff9-d300-4b25-9d7e-38edd99de7df
                                            author:
                                                email: john.doe@email.com
                                                firstname: John
                                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                                lastname: Doe
                                                registrationDateTime: '2019-08-24T14:15:22Z'
                                            status: Created
                                            type:
                                                displayName: EPU RUN
                                                id: f7febb6c-1c56-4a78-9d86-b60ec14fa41a
                                                name: spa.epu.run
                                                version: 1.0.0
                                            properties:
                                                -
                                                    value: '12.4'
                                                    type:
                                                        name: cpu.diesize
                                                        displayName: CPU Diesize
                                                        dataType: double
                                                        createdDateTime: '2019-08-24T14:15:22Z'
                                                    author:
                                                        email: john.doe@email.com
                                                        firstname: John
                                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                                        lastname: Doe
                                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                                    createdDateTime: '2019-08-24T14:15:22Z'
                                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                                -
                                                    value: '82.36'
                                                    unitCode: Kelvin
                                                    type:
                                                        name: cpu.temperature
                                                        displayName: CPU Temperature
                                                        dataType: double
                                                        quantityCode: Temperature
                                                        defaultUnitCode: Kelvin
                                                        createdDateTime: '2019-08-24T14:15:22Z'
                                                    author:
                                                        email: john.doe@email.com
                                                        firstname: John
                                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                                        lastname: Doe
                                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                                    createdDateTime: '2019-08-24T14:15:22Z'
                                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                                -
                                                    value: '2021-01-01T09:00:00'
                                                    type:
                                                        name: cpu.inittime
                                                        displayName: CPU Init Time
                                                        dataType: datetime
                                                        createdDateTime: '2019-08-24T14:15:22Z'
                                                    author:
                                                        email: john.doe@email.com
                                                        firstname: John
                                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                                        lastname: Doe
                                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                                    createdDateTime: '2019-08-24T14:15:22Z'
                                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                            createdDateTime: '2019-08-24T14:15:22Z'
                                            updatedDateTime: '2019-08-24T16:20:36Z'
                description: Successful operation
        parameters:
            uuid:
                name: uuid
                description: Element UUID
                schema:
                    format: uuid
                    type: string
                in: path
                required: true
            orderDirection:
                name: orderDirection
                description: Order direction when sorting
                schema:
                    default: ascending
                    enum:
                        - ascending
                        - descending
                    type: string
                in: query
                required: false
            pageSize:
                name: pageSize
                description: Number of elements per page
                schema:
                    default: 50
                    maximum: 150
                    minimum: 5
                    type: integer
                in: query
                required: false
            pageNumber:
                name: pageNumber
                description: Selected current page number
                schema:
                    default: 1
                    minimum: 1
                    type: integer
                in: query
                required: false
        examples:
            ActivitiesExample:
                value:
                    object: activity
                    pagination:
                        pageCount: 5
                        pageNumber: 2
                        pageSize: 50
                        objectCount: 246
                    data:
                        -
                            id: a344a742-25c4-4867-8ebf-c521a565a1c8
                            name: 'EPU acquisition #153'
                            description: >-
                                This activity represents a new data acquisition from a Thermo Fisher Scientific
                                hardware.
                            parentId: 16659ff9-d300-4b25-9d7e-38edd99de7df
                            author:
                                email: john.doe@email.com
                                firstname: John
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                lastname: Doe
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            status: Created
                            type:
                                displayName: EPU RUN
                                id: f7febb6c-1c56-4a78-9d86-b60ec14fa41a
                                name: spa.epu.run
                                version: 1.0.0
                            properties:
                                -
                                    value: '12.4'
                                    type:
                                        name: cpu.diesize
                                        displayName: CPU Diesize
                                        dataType: double
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                -
                                    value: '82.36'
                                    unitCode: Kelvin
                                    type:
                                        name: cpu.temperature
                                        displayName: CPU Temperature
                                        dataType: double
                                        quantityCode: Temperature
                                        defaultUnitCode: Kelvin
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                -
                                    value: '2021-01-01T09:00:00'
                                    type:
                                        name: cpu.inittime
                                        displayName: CPU Init Time
                                        dataType: datetime
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T16:20:36Z'
            ActivityExample:
                value:
                    object: activity
                    data:
                        id: a344a742-25c4-4867-8ebf-c521a565a1c8
                        name: 'EPU acquisition #153'
                        description: >-
                            This activity represents a new data acquisition from a Thermo Fisher Scientific
                            hardware.
                        parentId: 16659ff9-d300-4b25-9d7e-38edd99de7df
                        author:
                            email: john.doe@email.com
                            firstname: John
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            lastname: Doe
                            registrationDateTime: '2019-08-24T14:15:22Z'
                        status: Created
                        type:
                            displayName: EPU RUN
                            id: f7febb6c-1c56-4a78-9d86-b60ec14fa41a
                            name: spa.epu.run
                            version: 1.0.0
                        properties:
                            -
                                value: '12.4'
                                type:
                                    name: cpu.diesize
                                    displayName: CPU Diesize
                                    dataType: double
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                            -
                                value: '82.36'
                                unitCode: Kelvin
                                type:
                                    name: cpu.temperature
                                    displayName: CPU Temperature
                                    dataType: double
                                    quantityCode: Temperature
                                    defaultUnitCode: Kelvin
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                            -
                                value: '2021-01-01T09:00:00'
                                type:
                                    name: cpu.inittime
                                    displayName: CPU Init Time
                                    dataType: datetime
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T16:20:36Z'
            FileExample:
                value:
                    object: file
                    data:
                        id: d028c4fa-9616-4092-ba59-079ff5e24c0c
                        contentType: image/mrc
                        extension: mrc
                        name: foilhole_4311
                        parentId: a344a742-25c4-4867-8ebf-c521a565a1c8
                        size: 102400
                        path: /offload/20212001/sample.png
                        properties:
                            -
                                value: '12.4'
                                type:
                                    name: cpu.diesize
                                    displayName: CPU Diesize
                                    dataType: double
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                            -
                                value: '82.36'
                                unitCode: Kelvin
                                type:
                                    name: cpu.temperature
                                    displayName: CPU Temperature
                                    dataType: double
                                    quantityCode: Temperature
                                    defaultUnitCode: Kelvin
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                            -
                                value: '2021-01-01T09:00:00'
                                type:
                                    name: cpu.inittime
                                    displayName: CPU Init Time
                                    dataType: datetime
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    email: john.doe@email.com
                                    firstname: John
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    lastname: Doe
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                                updatedDateTime: '2019-08-24T16:20:36Z'
                        author:
                            email: john.doe@email.com
                            firstname: John
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            lastname: Doe
                            registrationDateTime: '2019-08-24T14:15:22Z'
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T16:20:36Z'
            FilesFetchExample:
                value:
                    object: file
                    pagination:
                        pageCount: 5
                        pageNumber: 2
                        pageSize: 50
                        objectCount: 246
                    data:
                        -
                            id: d028c4fa-9616-4092-ba59-079ff5e24c0c
                            contentType: image/mrc
                            extension: mrc
                            name: foilhole_4311
                            parentId: a344a742-25c4-4867-8ebf-c521a565a1c8
                            size: 102400
                            path: /offload/20212001/sample.png
                            properties:
                                -
                                    value: '12.4'
                                    type:
                                        name: cpu.diesize
                                        displayName: CPU Diesize
                                        dataType: double
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                -
                                    value: '82.36'
                                    unitCode: Kelvin
                                    type:
                                        name: cpu.temperature
                                        displayName: CPU Temperature
                                        dataType: double
                                        quantityCode: Temperature
                                        defaultUnitCode: Kelvin
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                                -
                                    value: '2021-01-01T09:00:00'
                                    type:
                                        name: cpu.inittime
                                        displayName: CPU Init Time
                                        dataType: datetime
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        email: john.doe@email.com
                                        firstname: John
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        lastname: Doe
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                    updatedDateTime: '2019-08-24T16:20:36Z'
                            author:
                                email: john.doe@email.com
                                firstname: John
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                lastname: Doe
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T16:20:36Z'
            ActivityPostExample:
                value:
                    name: 'EPU acquisition #153'
                    description: This activity represents a new data acquisition from a Thermo Fisher Scientific hardware.
                    parentId: 16659ff9-d300-4b25-9d7e-38edd99de7df
                    type:
                        name: spa.epu.run
                    properties:
                        -
                            value: '12.4'
                            type:
                                name: cpu.diesize
                        -
                            value: '82.36'
                            unitCode: Kelvin
                            type:
                                name: cpu.temperature
                        -
                            value: '2021-01-01T09:00:00'
                            type:
                                name: cpu.inittime
            FilePostExample:
                value:
                    id: d028c4fa-9616-4092-ba59-079ff5e24c0c
                    contentType: image/mrc
                    extension: mrc
                    name: foilhole_4311
                    binary: string
                    properties:
                        -
                            value: '82.36'
                            unitCode: Kelvin
                            type:
                                name: cpu.temperature
            FilePatchExample:
                value:
                    contentType: image/mrc
                    extension: mrc
                    name: foilhole_4311
                    properties:
                        -
                            value: '82.36'
                            unitCode: Kelvin
                            type:
                                name: cpu.temperature
            ErrorExample:
                value:
                    object: error
                    message: string
            ActivityPatchExample:
                value:
                    name: New name
                    properties:
                        -
                            value: '82.36'
                            unitCode: Kelvin
                            type:
                                name: cpu.diesize
            ConfigurationExample:
                value:
                    object: configuration
                    data:
                        processors:
                            -
                                name: eCL
                            -
                                name: EQM
            RolesExample:
                value:
                    object: role
                    pagination:
                        pageCount: 5
                        pageNumber: 2
                        pageSize: 50
                        objectCount: 246
                    data:
                        -
                            id: 6267bd22-2e2e-4fd8-b247-c78c6384eaf8
                            name: admin
                            type: customer
                            containerName: container1
            UsersExample:
                value:
                    object: user
                    pagination:
                        pageCount: 5
                        pageNumber: 2
                        pageSize: 50
                        objectCount: 246
                    data:
                        -
                            id: 2f3396b3-0040-4ae1-867f-a32bfc7c5f9d
                            userName: user1
                            createdDateTime: '1970-01-01T00:00:00'
                            updatedDateTime: '0001-01-01T00:00:00'
                            identity:
                                id: b181138a-4af0-4d95-89fb-158c27db89dc
                                providerType: local
            UserExample:
                value:
                    object: user
                    data:
                        id: 2f3396b3-0040-4ae1-867f-a32bfc7c5f9d
                        userName: user1
                        createdDateTime: '1970-01-01T00:00:00'
                        updatedDateTime: '0001-01-01T00:00:00'
                        identity:
                            id: b181138a-4af0-4d95-89fb-158c27db89dc
                            providerType: local
            FeatureLicenseExample:
                value:
                    object: featureLicense
                    data:
                        feature: FAthena
                        vendorString": DEMO
                        version: '2'
                        uncounted: false
                        tokens:
                            issued: 15
                            inUse: 3
            PropertyTypesExample:
                value:
                    object: propertyType
                    pagination:
                        pageCount: 5
                        pageNumber: 2
                        pageSize: 50
                        objectCount: 246
                    data:
                        -
                            id: b8f4d2e2-b2f7-4aec-becf-cdb9cece89bb
                            name: cpu.diesize
                            displayName: CPU Diesize
                            dataType: double
                            createdDateTime: '2019-08-24T14:15:22Z'
                        -
                            id: 04368b31-b548-4afd-82b6-b1f4b5b027d4
                            name: cpu.temperature
                            displayName: CPU Temperature
                            dataType: double
                            quantityCode: Temperature
                            defaultUnitCode: Kelvin
                            createdDateTime: '2019-08-24T14:15:22Z'
                        -
                            id: 5e222c7f-de5d-40c4-9a8b-ccaa480f629f
                            name: cpu.inittime
                            displayName: CPU Init Time
                            dataType: datetime
                            createdDateTime: '2019-08-24T14:15:22Z'
            PropertyTypeExample:
                value:
                    object: propertyType
                    data:
                        id: 96218c7a-8630-44b9-a6e5-ded5f7122457
                        name: cpu.diesize
                        displayName: CPU Diesize
                        dataType: double
                        createdDateTime: '2019-08-24T14:15:22Z'
            PropertyTypePostExample:
                value:
                    displayName: CPU Temperature
                    description: CPU Temperature
                    dataType: double
                    quantityCode: Temperature
                    defaultUnitCode: Kelvin
            LinkPostExample:
                value:
                    sourceId: 797f5a94-3689-4ac8-82fd-d749511ea2b2
                    targetId: cbca1126-180e-4334-9df8-cf82289d378b
                    type: relatesTo
            LinkExample:
                value:
                    data:
                        id: e6874b02-8187-4e90-8b6a-d9639ffbf09b
                        source:
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            object: activity
                        target:
                            id: e6217744-866f-460b-90e0-74c78417e314
                            object: activity
                        type: relatesTo
                        author:
                            id: c00866fe-8127-45f2-ae9e-837dfec8717e
                            firstname: John
                            lastname: Doe
                            email: john.doe@email.com
                            registrationDateTime: '2019-08-24T14:15:22Z'
                        createdDateTime: '2019-08-24T14:15:22Z'
                    object: link
            LinksExample:
                value:
                    pagination:
                        pageCount: 2
                        pageNumber: 1
                        pageSize: 2
                        objectCount: 2
                    data:
                        -
                            id: 73938d25-a27c-4600-a4e2-4912e9df49e5
                            source:
                                id: 4e6d790b-1512-4ca3-9386-8998e8bbd583
                                object: activity
                            target:
                                id: d7f70026-bbc3-47a4-a8e1-b2efac520161
                                object: file
                            type: relatesTo
                            author:
                                id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                firstname: John
                                lastname: Doe
                                email: john.doe@email.com
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                        -
                            id: e6874b02-8187-4e90-8b6a-d9639ffbf09b
                            source:
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                object: activity
                            target:
                                id: e6217744-866f-460b-90e0-74c78417e314
                                object: activity
                            type: relatesTo
                            author:
                                id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                firstname: John
                                lastname: Doe
                                email: john.doe@email.com
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                    object: link
            FolderExample:
                value:
                    data:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        displayName: string
                        description: string
                        parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                        properties:
                            -
                                value: '82.36'
                                type:
                                    id: 04368b31-b548-4afd-82b6-b1f4b5b027d4
                                    name: cpu.temperature
                                    displayName: CPU Temperature
                                    dataType: double
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                author:
                                    id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                    firstname: John
                                    lastname: Doe
                                    email: john.doe@email.com
                                    registrationDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                        author:
                            id: c00866fe-8127-45f2-ae9e-837dfec8717e
                            firstname: John
                            lastname: Doe
                            email: john.doe@email.com
                            registrationDateTime: '2019-08-24T14:15:22Z'
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
                    object: folder
            FoldersExample:
                value:
                    pagination:
                        pageCount: 2
                        pageNumber: 1
                        pageSize: 2
                        objectCount: 2
                    data:
                        -
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            displayName: string
                            description: string
                            parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                            properties:
                                -
                                    value: '82.36'
                                    type:
                                        id: 04368b31-b548-4afd-82b6-b1f4b5b027d4
                                        name: cpu.temperature
                                        displayName: CPU Temperature
                                        dataType: double
                                        unitCode: Kelvin
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    author:
                                        id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                        firstname: John
                                        lastname: Doe
                                        email: john.doe@email.com
                                        registrationDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                            author:
                                id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                firstname: John
                                lastname: Doe
                                email: john.doe@email.com
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T14:15:22Z'
                        -
                            id: e6874b02-8187-4e90-8b6a-d9639ffbf09b
                            displayName: string
                            description: string
                            parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                            author:
                                id: c00866fe-8127-45f2-ae9e-837dfec8717e
                                firstname: John
                                lastname: Doe
                                email: john.doe@email.com
                                registrationDateTime: '2019-08-24T14:15:22Z'
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T14:15:22Z'
                    object: folder
            FolderPostExample:
                value:
                    displayName: string
                    description: string
                    parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                    properties:
                        -
                            value: '82.36'
                            type:
                                name: cpu.temperature
            FolderPatchExample:
                value:
                    displayName: string
                    description: string
                    parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                    properties:
                        -
                            value: '82.36'
                            type:
                                name: cpu.temperature
            PermissionPostExample:
                value:
                    role: viewer
                    type: user
                    value: 70850378-7d3c-4f45-91b7-942d4dfbbd43
            PermissionExample:
                value:
                    data:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        role: viewer
                        type: user
                        value: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                        createdDateTime: '2019-08-24T14:15:22Z'
                        inheritedFrom:
                            id: 123f6eca-6276-4993-bfeb-53cbbbba6f08
                            object: folder
                    object: permission
            PermissionsExample:
                value:
                    pagination:
                        pageCount: 2
                        pageNumber: 1
                        pageSize: 2
                        objectCount: 2
                    data:
                        -
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            role: viewer
                            type: user
                            value: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                            createdDateTime: '2019-08-24T14:15:22Z'
                            inheritedFrom:
                                id: 123f6eca-6276-4993-bfeb-53cbbbba6f08
                                object: folder
                        -
                            id: e6874b02-8187-4e90-8b6a-d9639ffbf09b
                            role: viewer
                            type: user
                            value: f11b669d-7201-4c21-88af-d85092f0c005
                            createdDateTime: '2019-08-24T14:15:22Z'
                            inheritedFrom:
                                id: 345f6eca-6276-4993-bfeb-53cbbbba6f08
                                object: folder
                    object: permission
            ItemTypeCategoriesExample:
                value:
                    pagination:
                        pageCount: 1
                        pageNumber: 1
                        pageSize: 1
                        objectCount: 1
                    data:
                        -
                            name: standard.athena.material.category1
                            displayName: Category 1
                            description: Category 1 description
                            parentCategory:
                                name: standard.athena.material
                                displayName: Material
                    object: itemTypeCategory
            ItemPostExample:
                value:
                    type:
                        name: string
                    displayName: string
                    description: string
                    parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                    originId: aae96add-b528-41c7-bc74-5164403b34b2
                    location:
                        containerId: f11b669d-7201-4c21-88af-d85092f0c005
                        type: indexed
                        indexNumber: 0
                    properties:
                        -
                            value: string
                            type:
                                name: string
            ItemPatchExample:
                value:
                    displayName: string
                    description: string
                    parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                    location:
                        containerId: f11b669d-7201-4c21-88af-d85092f0c005
                        type: indexed
                        indexNumber: 0
                    properties:
                        -
                            value: string
                            type:
                                name: string
            ItemExample:
                value:
                    object: item
                    data:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        type:
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            name: string
                            version: 1.0.0
                            displayName: string
                            category:
                                name: standard.athena.material.category1
                                displayName: Category 1
                                parent:
                                    name: standard.athena.material
                                    displayName: Material
                        displayName: string
                        description: string
                        parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                        originId: aae96add-b528-41c7-bc74-5164403b34b2
                        location:
                            containerId: f11b669d-7201-4c21-88af-d85092f0c005
                            type: indexed
                            indexNumber: 0
                        properties:
                            -
                                value: string
                                type:
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    name: string
                                    displayName: string
                                    dataType: string
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                createdDateTime: '2019-08-24T14:15:22Z'
                        author:
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
                        _links:
                            -
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                location: 'https://public-api-domain/links/497f6eca-6276-4993-bfeb-53cbbbba6f08'
                                type: relatesTo
                                relationship: source
                                remote:
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    location: 'https://public-api-domain/items/527f6eca-6276-4993-bfeb-53cbbbba6f09'
                                    object: item
            ItemsExample:
                value:
                    object: item
                    pagination:
                        pageCount: 1
                        pageNumber: 1
                        pageSize: 1
                        objectCount: 1
                    data:
                        -
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            type:
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                name: string
                                version: 1.0.0
                                displayName: string
                                category:
                                    name: standard.athena.material.category1
                                    displayName: Category 1
                                    parent:
                                        name: standard.athena.material
                                        displayName: Material
                            displayName: string
                            description: string
                            parentId: 70850378-7d3c-4f45-91b7-942d4dfbbd43
                            originId: aae96add-b528-41c7-bc74-5164403b34b2
                            location:
                                containerId: f11b669d-7201-4c21-88af-d85092f0c005
                                type: indexed
                                indexNumber: 0
                            properties:
                                -
                                    value: string
                                    type:
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        name: string
                                        displayName: string
                                        dataType: string
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    createdDateTime: '2019-08-24T14:15:22Z'
                            author:
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T14:15:22Z'
                            _links:
                                -
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    location: 'https://public-api-domain/links/497f6eca-6276-4993-bfeb-53cbbbba6f08'
                                    type: relatesTo
                                    relationship: source
                                    remote:
                                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                        location: 'https://public-api-domain/items/527f6eca-6276-4993-bfeb-53cbbbba6f09'
                                        object: item
            ItemLocationsExample:
                value:
                    object: itemLocation
                    pagination:
                        pageCount: 1
                        pageNumber: 1
                        pageSize: 1
                        objectCount: 1
                    data:
                        -
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            itemId: f11b669d-7201-4c21-88af-d85092f0c005
                            location:
                                containerId: f11b669d-7201-4c21-88af-d85092f0c005
                                type: indexed
                                indexNumber: 1
                            startDateTime: '2019-08-24T14:15:22Z'
                            endDateTime: '2019-08-30T14:15:22Z'
            ItemTypeExample:
                value:
                    object: itemType
                    data:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        version: 1.0.0
                        scope: standard
                        displayName: string
                        description: string
                        status: published
                        author:
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            firstname: string
                            lastname: string
                            email: john.doe@email.com
                            registrationDateTime: '2019-08-24T14:15:22Z'
                        category:
                            name: standard.athena.material.category1
                            displayName: Category 1
                            parent:
                                name: standard.athena.material
                                displayName: Material
                        supportedLocation:
                            type: indexed
                            minIndexNumber: 0
                            maxIndexNumber: 11
                        properties:
                            -
                                type:
                                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                                    name: string
                                    displayName: string
                                    dataType: string
                                    createdDateTime: '2019-08-24T14:15:22Z'
                                required: false
                                readOnly: false
                                inheritable: false
                                defaultValue: string
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
            ItemTypesExample:
                value:
                    object: itemType
                    pagination:
                        pageCount: 1
                        pageNumber: 1
                        pageSize: 1
                        objectCount: 1
                    data:
                        -
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            name: string
                            version: 1.0.0
                            scope: standard
                            displayName: string
                            description: string
                            status: published
                            category:
                                name: standard.athena.material.category1
                                displayName: Category 1
                                parent:
                                    name: standard.athena.material
                                    displayName: Material
                            supportedLocation:
                                type: indexed
                                minIndexNumber: 0
                                maxIndexNumber: 11
                            author:
                                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                            properties:
                                -
                                    type:
                                        name: string
                                        displayName: string
                                        dataType: string
                                        createdDateTime: '2019-08-24T14:15:22Z'
                                    required: true
                                    inheritable: false
                                    defaultValue: string
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T14:15:22Z'
            IIIFExample:
                value:
                    '@context': 'http://iiif.io/api/image/3/context.json'
                    id: 'https://example.org/image-service/abcd1234/1E34750D-38DB-4825-A38A-B60A345E591C'
                    type: ImageService3
                    protocol: 'http://iiif.io/api/image'
                    profile: level2
                    width: 6000
                    height: 4000
                    maxHeight: 2000
                    maxWidth: 3000
                    maxArea: 4000000
            PropertyTypeManifestPostExample:
                value:
                    version: 1.0.0
                    scope: application
                    typeName: application.test.test
                    typeVersion: 1.0.0
                    displayName: An example
                    description: An example property type
                    dataType: string
            ActivityTreeDeletionRequestExample:
                value:
                    object: activityTreeDeletionRequest
                    data:
                        id: 5257c7e0-2917-4b4f-8310-cb3e8083e2d4
                        activityId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
                        status: completed
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
                        author:
                            id: 9bbef7ad-4e3b-4665-8a7c-a2a48236fc36
                        progress:
                            total: 10
                            processed: 5
                            skipped: 5
            ActivityTreeDeletionRequestPostExample:
                value:
                    activityId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
            ActivityCleanupRequestExample:
                value:
                    object: activityCleanupRequest
                    data:
                        id: 5257c7e0-2917-4b4f-8310-cb3e8083e2d4
                        activityId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
                        status: completed
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
                        author:
                            id: 9bbef7ad-4e3b-4665-8a7c-a2a48236fc36
                        dryRun: true
                        progress:
                            total: 10
                            processed: 5
                            skipped: 5
                        result:
                            -
                                rules:
                                    - 365eb13d-5416-4e3b-b0c7-c6ad68670831
                                totalCount: 10
                                totalSize: 4374389
            ActivityCleanupRequestsExample:
                value:
                    object: activityCleanupRequest
                    pagination:
                        pageCount: 1
                        pageNumber: 1
                        pageSize: 1
                        objectCount: 1
                    data:
                        -
                            id: 5257c7e0-2917-4b4f-8310-cb3e8083e2d4
                            activityId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
                            status: completed
                            createdDateTime: '2019-08-24T14:15:22Z'
                            updatedDateTime: '2019-08-24T14:15:22Z'
                            author:
                                id: 9bbef7ad-4e3b-4665-8a7c-a2a48236fc36
                            dryRun: true
                            progress:
                                total: 10
                                processed: 5
                                skipped: 5
                            result:
                                -
                                    rules:
                                        - 365eb13d-5416-4e3b-b0c7-c6ad68670831
                                    totalCount: 10
                                    totalSize: 4374389
            ActivityCleanupRequestPostExample:
                value:
                    activityId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
                    dryRun: false
                    rules:
                        - bb638652-dc97-414b-b91e-7296261ca502
            FolderTreeDeletionRequestExample:
                value:
                    object: folderTreeDeletionRequest
                    data:
                        id: 5257c7e0-2917-4b4f-8310-cb3e8083e2d4
                        folderId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81
                        status: completed
                        createdDateTime: '2019-08-24T14:15:22Z'
                        updatedDateTime: '2019-08-24T14:15:22Z'
                        author:
                            id: 9bbef7ad-4e3b-4665-8a7c-a2a48236fc36
                        progress:
                            total: 10
                            processed: 5
                            skipped: 5
            FolderTreeDeletionRequestPostExample:
                value:
                    folderId: 91731bd0-d5c8-4aa7-9bd4-75c906b00e81

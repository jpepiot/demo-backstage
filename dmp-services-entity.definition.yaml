apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: dmp-services-entity
  title: Entity service
  description: Manages activity, item and file informations
  annotations:
    backstage.io/techdocs-ref: dir:.
    sonarqube.org/project-key: dmp-services-entity
    gitlab.com/project-id: '702'
  tags:
    - api
    - rest
    - dotnetcore
  links:
    - url: https://frbor-gitlab01.emea.thermo.com/DMP/dmp-services/dmp-services-entity
      title: GitLab repo
      icon: gitlab
spec:
  type: service
  lifecycle: production
  owner: core-team
  dependsOn:
    - resource:default/dmp-databases-entity
  providesApis:
    - entity-api
  consumesApis:
    - storage-api
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: entity-api
  description: Manages activity, item and file informations API interfaces
  title: Entity Rest API
spec:
  type: openapi
  lifecycle: production
  owner: core-team
  definition: |
    openapi: 3.0.1
    info:
        title: Entity service API 1.22
        version: 0.0.0-1.22
        description: Entity service Open API Specifications
    paths:
        /api/actions:
            get:
                tags:
                    - Actions
                parameters:
                    -
                        name: parentType
                        description: 'Parent entity type (e.g: Activity)'
                        schema:
                            $ref: '#/components/schemas/EntityType'
                        in: query
                    -
                        name: parentId
                        description: 'Parent entity ID (e.g: 42)'
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: projectIds
                        description: '42'
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActionModelListExample'
                        description: Actions successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Parent not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActionsAsync
                summary: Retrieves actions for a parent entity type or a project id list
                description: >-
                    Uses the authentication token to determine available actions for a parent entity type or a
                    project id list
        /api/activities:
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                    -
                        name: stepId
                        schema:
                            format: int32
                            type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityDao'
                                example:
                                    -
                                        activityClassification:
                                            classification: AcquisitionSet
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Acquisition set
                                        activityFilter:
                                            creationDate: '0001-01-01T00:00:00'
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Activity filter name
                                            updateDate: '0001-01-01T00:00:00'
                                            userId: 00000000-0000-0000-0000-000000000000
                                            value: |-
                                                {
                                                  "key": {
                                                    "minValue": 0,
                                                    "maxValue": 100
                                                  }
                                                }
                                        activityType:
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Run
                                            type: Run
                                        archived: false
                                        creationDate: '0001-01-01T00:00:00'
                                        creatorId: 00000000-0000-0000-0000-000000000000
                                        description: Activity description
                                        experimentId: 1
                                        hierarchy: '1'
                                        id: 1
                                        name: Activity name
                                        parentId: 0
                                        processors:
                                            - MotionCorrection
                                            - CTFDetermination
                                        status: NotStarted
                                        statusId: 0
                                        systemStatus: []
                                        contentType: Basic
                                        stepId: 1
                                        updateDate: '0001-01-01T00:00:00'
                                        elementId: 81493127-1c1f-4ec5-97de-3d803997ac35
                                        typeName: free
                                        activityTypeReferenceId: 0
                        description: Activities matching the given id list on which the user have permissions
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivities
                summary: Find activities by ids (comma separated) or stepId
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationModel'
                            example:
                                parentId: 10
                                stepId: 1
                                name: Activity name
                                activityType: Free
                                activityFilterId: 00000000-0000-0000-0000-000000000000
                                description: Activity description
                                processors:
                                    - MotionCorrection
                                    - CTFDetermination
                                contentType: VolumetricData
                    required: true
                tags:
                    - Activities
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityDao'
                                example:
                                    activityClassification:
                                        classification: AcquisitionSet
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Acquisition set
                                    activityFilter:
                                        creationDate: '0001-01-01T00:00:00'
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Activity filter name
                                        updateDate: '0001-01-01T00:00:00'
                                        userId: 00000000-0000-0000-0000-000000000000
                                        value: <stringified JSON object>
                                    activityType:
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Free
                                        type: Free
                                    archived: false
                                    creationDate: '0001-01-01T00:00:00'
                                    creatorId: 00000000-0000-0000-0000-000000000000
                                    description: Activity description
                                    experimentId: 1
                                    hierarchy: '10.1'
                                    id: 1
                                    name: Activity name
                                    parentId: 10
                                    processors:
                                        - MotionCorrection
                                        - CTFDetermination
                                    status: NotStarted
                                    statusId: 0
                                    systemStatus: []
                                    contentType: Basic
                                    stepId: 1
                                    updateDate: '0001-01-01T00:00:00'
                                    elementId: 1406dcdd-945c-401d-a396-38df6dc691cb
                                    typeName: free
                                    activityTypeReferenceId: 0
                        description: Activity successfully created
                    '400':
                        description: Activity model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: CreateActivity
                summary: Creates an activity
        '/api/activities/{id}/children':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        description: 'Activity ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                    -
                        name: name
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityDao'
                                example:
                                    -
                                        activityClassification:
                                            classification: AcquisitionSet
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Acquisition set
                                        activityFilter:
                                            creationDate: '0001-01-01T00:00:00'
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Activity filter name
                                            updateDate: '0001-01-01T00:00:00'
                                            userId: 00000000-0000-0000-0000-000000000000
                                            value: |-
                                                {
                                                  "key": {
                                                    "minValue": 0,
                                                    "maxValue": 100
                                                  }
                                                }
                                        activityType:
                                            id: 00000000-0000-0000-0000-000000000000
                                            name: Run
                                            type: Run
                                        archived: false
                                        creationDate: '0001-01-01T00:00:00'
                                        creatorId: 00000000-0000-0000-0000-000000000000
                                        description: Activity description
                                        experimentId: 1
                                        hierarchy: '1'
                                        id: 1
                                        name: Activity name
                                        parentId: 0
                                        processors:
                                            - MotionCorrection
                                            - CTFDetermination
                                        status: NotStarted
                                        statusId: 0
                                        systemStatus: []
                                        contentType: Basic
                                        stepId: 1
                                        updateDate: '0001-01-01T00:00:00'
                                        elementId: ede8a939-c004-475b-a796-d3b15c3cb518
                                        typeName: free
                                        activityTypeReferenceId: 0
                        description: Activity details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivitiesChildren
                summary: Find children activities
        '/api/activities/{id}/actions':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        description: 'Activity ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Action'
                                example:
                                    - Archive_Activity
                                    - Create_Activity
                                    - Delete_Activity
                        description: Activity actions successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityActions
                summary: Retrieves activity available actions for the current user
                description: >-
                    Uses the authentication token to determine available actions for an user, on a particular
                    activity.
        '/api/activities/{id}':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        description: 'Activity ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityDao'
                                example:
                                    activityClassification:
                                        classification: AcquisitionSet
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Acquisition set
                                    activityFilter:
                                        creationDate: '0001-01-01T00:00:00'
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Activity filter name
                                        updateDate: '0001-01-01T00:00:00'
                                        userId: 00000000-0000-0000-0000-000000000000
                                        value: <stringified JSON object>
                                    activityType:
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Run
                                        type: Run
                                    archived: false
                                    creationDate: '0001-01-01T00:00:00'
                                    creatorId: 00000000-0000-0000-0000-000000000000
                                    description: Activity description
                                    experimentId: 1
                                    hierarchy: '1'
                                    id: 1
                                    name: Activity name
                                    parentId: 0
                                    processors:
                                        - MotionCorrection
                                        - CTFDetermination
                                    status: NotStarted
                                    statusId: 0
                                    systemStatus: []
                                    contentType: Basic
                                    stepId: 1
                                    updateDate: '0001-01-01T00:00:00'
                                    elementId: 2c4b9c5e-ddc3-4a72-8992-be8c061617da
                                    typeName: free
                                    activityTypeReferenceId: 0
                        description: Activity details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityById
                summary: Retrieves an activity details
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    archived: {}
                                    experimentId: {}
                                    parentId: {}
                                    status: {}
                                    stepId: {}
                                    thumbnailStorageId: {}
                                    activityFilterId: {}
                                    description: {}
                                    name: {}
                                    gridId: {}
                                    sampleId: {}
                                    contentType: {}
                                    processors: {}
                                additionalProperties: false
                            example:
                                archived: true
                                experimentId: 1
                                parentId: 1
                                status: Completed
                                stepId: 1
                                thumbnailStorageId: 5b24b01e-05ff-484a-a575-37eee72b15a6
                                activityFilterId: c68dffb1-1064-483e-ba39-095008be060a
                                description: Activity Description
                                name: Activity Name
                                gridId: 1
                                sampleId: 1
                                contentType: Basic
                                processors:
                                    - MotionCorrection
                                    - CTFDetermination
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityDao'
                        description: Activity successfully updated
                    '400':
                        description: Activity model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: UpdateActivity
                summary: Update an activity
        '/api/activities/{id}/permissions':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by activity id
        '/api/activities/{id}/children/count':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        description: 'Activity ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityChildCountModel'
                                example:
                                    firstLevelTotal: 100
                        description: Activity child count successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Parent activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityChildCount
                summary: Count all first-level children for a given activity
        '/api/activities/{id}/status':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        description: 'Activity ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityStatusLegacyModel'
                        description: Activity status returned
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityStatus
                summary: Get an activity status
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityStatusLegacyModel'
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityStatusLegacyModel'
                        description: Activity successfully updated
                    '400':
                        description: Activity status model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: UpdateActivityStatus
                summary: Update an activity status
        '/api/activities/{id}/hierarchy':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityHierarchy
                summary: Get activity hierarchy for the given id
        '/api/activities/import/{id}':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityImportResponseModel'
                        description: Activity details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityImportByIdAsync
                summary: Retrieves an activity details
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PatchActivityImportRequestModel'
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityImportResponseModel'
                        description: Activity successfully updated
                    '400':
                        description: Activity model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: UpdateActivityImportAsync
                summary: Update an activity
        '/api/activities/import/{id}/children':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                    -
                        name: name
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/ActivityImportResponseModel'
                        description: Activity details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivitiesChildrenImportAsync
                summary: Find children activities
        '/api/activities/import/{id}/children/count':
            get:
                tags:
                    - Activities
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityChildCountModel'
                                example:
                                    firstLevelTotal: 100
                        description: Activity child count successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Parent activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityImportChildCountAsync
                summary: Count all first-level children for a given activity
        /api/activities/import:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostActivityImportRequestModel'
                tags:
                    - Activities
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityImportResponseModel'
                        description: Activity successfully created
                    '400':
                        description: Activity model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: CreateActivityImportAsync
                summary: Creates an activity
        '/api/activities/classifications/{id}':
            get:
                tags:
                    - Activity (technical) classifications
                parameters:
                    -
                        name: id
                        description: 'Activity classification ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityClassificationModel'
                                example:
                                    classification: AcquisitionSet
                                    id: 00000000-0000-0000-0000-000000000000
                                    name: Acquisition set
                        description: Activity classification details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity classification not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityClassificationById
                summary: Retrieves an activity classification details
        /api/activities/classifications:
            get:
                tags:
                    - Activity (technical) classifications
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityClassificationModel'
                                example:
                                    -
                                        classification: Acquisition
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Acquisition
                                    -
                                        classification: AcquisitionSet
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Acquisition set
                        description: Activity classification list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: ListActivityClassification
                summary: Retrieves activity classification list
        /api/activity-filters:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityFilterCreationModel'
                            example:
                                activityId: 1
                                filterRequest:
                                    -
                                        range:
                                            -
                                                phaseShift:
                                                    gte: 0
                                                    lte: 100
                                            -
                                                astigmatism:
                                                    gte: 50
                                                    lte: 150
                                name: 'Activity filter #1'
                                value:
                                    key:
                                        minValue: 0
                                        maxValue: 100
                    required: true
                tags:
                    - Activity (graph) filters
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityFilterModel'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    filterRequest: <stringified JSON object>
                                    id: 00000000-0000-0000-0000-000000000000
                                    name: 'Activity filter #1'
                                    updateDate: '0001-01-01T00:00:00'
                                    userId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                                    value: <stringified JSON object>
                        description: Activity filter successfully created
                    '400':
                        description: Activity filter model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: CreateActivityFilter
                summary: Creates an activity filter
                description: >-
                    Use the 'activity ID' field to automatically bind this newly created filter to an existing
                    activity.
        '/api/activity-filters/{id}':
            get:
                tags:
                    - Activity (graph) filters
                parameters:
                    -
                        name: id
                        description: 'Activity filter ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityFilterModel'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    filterRequest: <stringified JSON object>
                                    id: 00000000-0000-0000-0000-000000000000
                                    name: 'Activity filter #1'
                                    updateDate: '0001-01-01T00:00:00'
                                    userId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                                    value: <stringified JSON object>
                        description: Activity filter successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity filter not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityFilterById
                summary: Get an activity filter by its ID
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityFilterUpdateModel'
                            example:
                                filterRequest:
                                    -
                                        range:
                                            -
                                                phaseShift:
                                                    gte: 0
                                                    lte: 100
                                            -
                                                astigmatism:
                                                    gte: 50
                                                    lte: 150
                                name: 'Updated activity filter #1'
                                value:
                                    key:
                                        minValue: 0
                                        maxValue: 100
                tags:
                    - Activity (graph) filters
                parameters:
                    -
                        name: id
                        description: 'Activity filter ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityFilterModel'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    filterRequest: <stringified JSON object>
                                    id: 00000000-0000-0000-0000-000000000000
                                    name: 'Activity filter #1'
                                    updateDate: '0001-01-01T00:00:00'
                                    userId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                                    value: <stringified JSON object>
                        description: ActivityFilter successfully updated
                    '400':
                        description: Activity filter model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity filter not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: UpdateActivityFilter
                summary: Updates an activity filter
        /api/activities/statuses:
            get:
                tags:
                    - Activity statuses
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityStatusModel'
                                example:
                                    -
                                        name: SampleLost
                                        label: Sample lost
                                        definition: Sample not in location and state expected by the action.
                                    -
                                        name: WaitingForStart
                                        label: Pending sample
                                        definition: >-
                                            Waiting for sample arrival or preparation steps. (Maps to Selected for
                                            Control Job and SettingUp for Process Job.)
                                    -
                                        name: Completed
                                        label: Completed successfully
                                        definition: Completed without any warnings or errors.
                        description: Activity status list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: ListActivityStatus
                summary: Retrieves activity type list
        '/api/activities/types/{id}':
            get:
                tags:
                    - Activity (business) types
                parameters:
                    -
                        name: id
                        description: 'Activity type ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityTypeModel'
                                example:
                                    id: 00000000-0000-0000-0000-000000000000
                                    name: Run
                                    type: Run
                        description: Activity type details successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity type not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityTypeById
                summary: Retrieves an activity type details
        /api/activities/types:
            get:
                tags:
                    - Activity (business) types
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityTypeModel'
                                example:
                                    -
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Run
                                        type: Run
                                    -
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Micrograph
                                        type: Micrograph
                                    -
                                        id: 00000000-0000-0000-0000-000000000000
                                        name: Free
                                        type: Free
                        description: Activity type list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: ListActivityType
                summary: Retrieves activity type list
        /api/datasets:
            get:
                tags:
                    - Datasets
                parameters:
                    -
                        name: stepId
                        description: 'Step ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Dataset'
                                example:
                                    -
                                        archived: false
                                        description: Dataset 1 description
                                        gridId: 1
                                        sampleId: 1
                                        status: NotStarted
                                        stepId: 1
                                        thumbnail: 00000000-0000-0000-0000-000000000000
                                        creationDate: '0001-01-01T00:00:00'
                                        creator: 00000000-0000-0000-0000-000000000000
                                        creatorName: Athena team
                                        id: 1
                                        name: Dataset 1 name
                                        updateDate: '0001-01-01T00:00:00'
                                    -
                                        archived: false
                                        description: Dataset 2 description
                                        gridId: 1
                                        sampleId: 1
                                        status: InProgress
                                        stepId: 1
                                        thumbnail: 00000000-0000-0000-0000-000000000000
                                        creationDate: '0001-01-01T00:00:00'
                                        creator: 00000000-0000-0000-0000-000000000000
                                        creatorName: Athena team
                                        id: 2
                                        name: Dataset 2 name
                                        updateDate: '0001-01-01T00:00:00'
                        description: Dataset list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetDatasetByStepId
                summary: Get datasets for a given step
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatasetCreationModel'
                            example:
                                name: Dataset name
                                stepId: 1
                                gridId: 1
                                sampleId: 1
                    required: true
                tags:
                    - Datasets
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Dataset'
                                example:
                                    archived: false
                                    description: Dataset description
                                    gridId: 1
                                    sampleId: 1
                                    status: NotStarted
                                    stepId: 1
                                    thumbnail: 00000000-0000-0000-0000-000000000000
                                    creationDate: '0001-01-01T00:00:00'
                                    creator: 00000000-0000-0000-0000-000000000000
                                    creatorName: Athena team
                                    id: 1
                                    name: Dataset name
                                    updateDate: '0001-01-01T00:00:00'
                        description: Dataset successfully created
                    '400':
                        description: Dataset model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: CreateDataset
                summary: Creates a dataset
        '/api/datasets/{id}':
            get:
                tags:
                    - Datasets
                parameters:
                    -
                        name: id
                        description: 'Dataset ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Dataset'
                                example:
                                    archived: false
                                    description: Dataset description
                                    gridId: 1
                                    sampleId: 1
                                    status: NotStarted
                                    stepId: 1
                                    thumbnail: 00000000-0000-0000-0000-000000000000
                                    creationDate: '0001-01-01T00:00:00'
                                    creator: 00000000-0000-0000-0000-000000000000
                                    creatorName: Athena team
                                    id: 1
                                    name: Dataset name
                                    updateDate: '0001-01-01T00:00:00'
                        description: Dataset successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Dataset not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetDatasetById
                summary: Get a dataset by its ID
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DatasetUpdateModel'
                            example:
                                gridId: 1
                                sampleId: 1
                tags:
                    - Datasets
                parameters:
                    -
                        name: id
                        description: 'Dataset ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Dataset'
                                example:
                                    archived: false
                                    description: Dataset description
                                    gridId: 1
                                    sampleId: 1
                                    status: NotStarted
                                    stepId: 1
                                    thumbnail: 00000000-0000-0000-0000-000000000000
                                    creationDate: '0001-01-01T00:00:00'
                                    creator: 00000000-0000-0000-0000-000000000000
                                    creatorName: Athena team
                                    id: 1
                                    name: Dataset name
                                    updateDate: '0001-01-01T00:00:00'
                        description: Dataset successfully updated
                    '400':
                        description: Dataset model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Dataset not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: UpdateDataset
                summary: Updates a dataset. Binds a sample/grid combo to an existing dataset.
                description: Use 0 to unbind sample/grid combo.
        '/api/elements/{uuid}/file':
            get:
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        description: ObjectResult_FileElement
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Unable to find details for file
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileContentDetails
                summary: Get file details
        '/api/elements/{uuid}/tree':
            get:
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: Depth
                        schema:
                            format: int32
                            pattern: ^\d+$
                            type: integer
                        in: query
                    -
                        name: Class
                        schema:
                            type: array
                            items:
                                type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/TreeElementResponseModelBasicListResponseModel'
                        description: Elements tree
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetElementTree
                summary: Get an element with its descendants
            patch:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/ElementPatchRequestModel'
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Element'
                        description: Patched element
                    '401':
                        description: Unauthorized
                    '403':
                        description: Not enough access to the ressource
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PatchElementTree
                summary: Patch an element and its descendants
        '/api/elements/{uuid}':
            get:
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/GenericEntityElement'
                        description: GenericEntityElement
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: GetElementByUniqueIdentifierObsolete
                summary: 'Get element by unique identifier {uuid}'
        /api/elements/legacy:
            get:
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: EntityType
                        schema:
                            $ref: '#/components/schemas/EntityType'
                        in: query
                    -
                        name: EntityId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: ElementId
                        schema:
                            format: uuid
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/GenericEntityElement'
                        description: GenericEntityElement
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetElementByUniqueIdentifier
                summary: 'Get element by unique identifier {uuid} or {id, entityType}'
        '/api/elements/{elementClass}/{uuid}':
            head:
                tags:
                    - Elements (Private)
                parameters:
                    -
                        name: elementClass
                        schema:
                            $ref: '#/components/schemas/ElementClass'
                        in: path
                        required: true
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                    -
                        name: operation
                        schema:
                            $ref: '#/components/schemas/Operation'
                        in: query
                responses:
                    '200':
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Not enough access to the ressource
                    '404':
                        description: Element not found
                security:
                    -
                        oauth2: []
                operationId: HeadElementForCurrentUser
                summary: 'Make sure identifier {elementClass, uuid} is consistent and current user can see it.'
        '/api/elements/files/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FileResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: No grant to access file
                    '404':
                        description: Unable to find details for file
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileDetails
                summary: Get file details with properties
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: File deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: No grant to access file
                    '404':
                        description: Unable to find file
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteFile
                summary: Delete file
            patch:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/FileUpdateRequestModel'
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FileResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PatchFileElement
                summary: Update file element by id
        /api/elements/files:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: StorageId
                        schema:
                            pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
                            type: string
                        in: query
                    -
                        name: ParentId
                        schema:
                            pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
                            type: string
                        in: query
                    -
                        name: Extension
                        schema:
                            type: string
                        in: query
                    -
                        name: Name
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FileResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileElements
                summary: Get file elements
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/FileElementCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FileResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostFileElement
                summary: Create a file element
        /api/elements/folders:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: DisplayName
                        schema:
                            type: string
                        in: query
                    -
                        name: ParentId
                        schema:
                            pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: WithoutParent
                        schema:
                            type: boolean
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FolderResponseModelTypedListResponseModel'
                        description: Success
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFolders
                summary: List folders
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/FolderCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FolderResponseModelTypedObjectResponseModel'
                        description: Created
                    '400':
                        description: ''
                    '401':
                        description: ''
                    '403':
                        description: ''
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostFolderElement
                summary: Create a folder element
        '/api/elements/folders/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FolderResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFolderElementById
                summary: Get a folder by id
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: Folder deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: No grant to access folder
                    '404':
                        description: Unable to find folder
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteFolderElementById
                summary: Delete a folder by id
            patch:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/FolderPatchRequestModel'
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FolderResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PatchFolderElement
                summary: Patch the folder of the given uuid.
        /api/elements/items:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: TypeName
                        schema:
                            type: string
                        in: query
                    -
                        name: DisplayName
                        schema:
                            type: string
                        in: query
                    -
                        name: Category
                        schema:
                            type: string
                        in: query
                    -
                        name: Location.ContainerId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: Location.ContainerType
                        schema:
                            type: string
                        in: query
                    -
                        name: Location.Type
                        schema:
                            type: string
                        in: query
                    -
                        name: OriginId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: ParentId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: Property.TypeName
                        schema:
                            type: string
                        in: query
                    -
                        name: Property.TypeVersion
                        schema:
                            type: string
                        in: query
                    -
                        name: Property.Value
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ItemResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemElements
                summary: List items
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/ItemCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '201':
                        description: Item created
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostItemElement
                summary: Create an item element
        '/api/elements/items/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ItemResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemElementById
                summary: Get an item element by id
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: Item deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteItemElementById
                summary: Delete an item element by id
            patch:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/ItemUpdateRequestModel'
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ItemResponseModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Item not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PatchItemElement
                summary: Update an item element
        /api/elements/item-location-history:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: From
                        schema:
                            format: date-time
                            type: string
                        in: query
                    -
                        name: Until
                        schema:
                            format: date-time
                            type: string
                        in: query
                    -
                        name: HasLocation
                        schema:
                            type: boolean
                        in: query
                    -
                        name: Location.ContainerId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: Location.ContainerType
                        schema:
                            type: string
                        in: query
                    -
                        name: Location.Type
                        schema:
                            type: string
                        in: query
                    -
                        name: ItemId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ItemLocationQueryRequestModelTypedObjectResponseModel'
                        description: Success
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemLocationHistory
                summary: Search item location history
        /api/elements/item-type-categories:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: Name
                        schema:
                            type: string
                        in: query
                    -
                        name: DisplayName
                        schema:
                            type: string
                        in: query
                    -
                        name: Version
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        description: ItemTypeCategoryResponseModel
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemTypeCategories
                summary: List item type categories
        /api/elements/item-types:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: Name
                        schema:
                            type: string
                        in: query
                    -
                        name: DisplayName
                        schema:
                            type: string
                        in: query
                    -
                        name: Version
                        schema:
                            type: string
                        in: query
                    -
                        name: Category
                        schema:
                            type: string
                        in: query
                    -
                        name: Status
                        schema:
                            type: string
                        in: query
                    -
                        name: Scope
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        description: ItemTypeResponseModel
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemTypes
                summary: List item types
        '/api/elements/item-types/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        description: AggregatorObjectResult_ItemTypeResponseModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetItemTypeById
                summary: Get item type by id
        /api/elements/links:
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/LinkCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '201':
                        description: ObjectResponseModel_LinkResponseModel
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '409':
                        description: Conflict
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostLink
                summary: Create a link between two elements
        '/api/elements/links/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        description: ObjectResponseModel_LinkResponseModel
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetLink
                summary: Get a link
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '400':
                        description: BadRequest
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteLink
                summary: Delete a link
        '/api/elements/permissions/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        description: ObjectResponseModel_PermissionResponseModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Permission not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeletePermission
                summary: Get a permission
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: Permission deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Permission not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeletePermission
                summary: Delete a permission
        /api/elements/permissions:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: ElementId
                        schema:
                            format: uuid
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '201':
                        description: Permission created
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '409':
                        description: Permission is incompatible with existing permission
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissions
                summary: Get all permissions (included inherited)
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/PermissionCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '201':
                        description: Permission created
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '409':
                        description: Permission is incompatible with existing permission
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostPermission
                summary: Create a permission
        /api/elements/property-types:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: Name
                        schema:
                            type: string
                        in: query
                    -
                        name: DisplayName
                        schema:
                            type: string
                        in: query
                    -
                        name: Version
                        schema:
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        description: ObjectResponseModel_PropertyTypeResponseModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPropertyTypes
                summary: List property types
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/PropertyTypeCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '201':
                        description: ObjectResponseModel_PropertyTypeResponseModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostPropertyType
                summary: Create a property type
        '/api/elements/property-types/{uuid}':
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: No Content
                    '400':
                        description: Bad Request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Not Found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeletePropertyType
                summary: Delete a property type
        /api/experiments:
            get:
                tags:
                    - Experiments
                parameters:
                    -
                        name: projectId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Experiment'
                        description: Experiments
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetExperimentByProjectId
                summary: Get experiments for a given project and by experiment id list if provided
        '/api/experiments/{id}':
            get:
                tags:
                    - Experiments
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Experiment'
                        description: Experiment
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetExperimentById
                summary: Get experiment by id
        '/api/experiments/{id}/permissions':
            get:
                tags:
                    - Experiments
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by experiment id
        '/api/experiments/{id}/hierarchy':
            get:
                tags:
                    - Experiments
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Experiment not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetExperimentHierarchy
                summary: Get experiment hierarchy for the given id
        /api/files:
            get:
                tags:
                    - Files
                parameters:
                    -
                        name: datasetId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: stepId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: activityId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/File'
                        description: Files
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileByEntityId
                summary: Get files for a given entity
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FileCreationModel'
                            example:
                                blobId: 9a7054ce-9b0e-4c30-9d7e-feb21f7e6815
                                entityId: 1
                                entityType: Activity
                                isConvertible: true
                    required: true
                tags:
                    - Files
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/FileCreationResponseExample'
                        description: File successfully created
                    '400':
                        description: File creation model is null or incomplete
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: RegisterFile
                summary: Register file
        '/api/files/{id}':
            get:
                tags:
                    - Files
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/File'
                                example:
                                    annotations: []
                                    properties: []
                                    activityId: 1
                                    archived: false
                                    convertedStorageId: 00000000-0000-0000-0000-000000000000
                                    experimentId: 1
                                    extension: png
                                    imageType: image/png
                                    isConvertible: true
                                    size: 1231531
                                    stepId: 1
                                    storageId: 00000000-0000-0000-0000-000000000000
                                    systemStatus: []
                                    thumbnailStorageId: 00000000-0000-0000-0000-000000000000
                                    elementId: 00000000-0000-0000-0000-000000000000
                                    creationDate: '0001-01-01T00:00:00'
                                    creator: creatorId
                                    creatorName: Creator Name
                                    id: 1
                                    name: FileName
                                    updateDate: '0001-01-01T00:00:00'
                        description: File
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileById
                summary: Get file by id
        '/api/files/{id}/permissions':
            get:
                tags:
                    - Files
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by file id
        '/api/files/{id}/hierarchy':
            get:
                tags:
                    - Files
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: File not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetFileHierarchy
                summary: Get file hierarchy for the given id
        '/api/projects/{id}':
            get:
                tags:
                    - Projects
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Project'
                        description: Project
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Project not found
                    '500':
                        description: Project not found
                security:
                    -
                        oauth2: []
                operationId: GetProjectById
                summary: Get a project by its Id
        '/api/projects/{id}/permissions':
            get:
                tags:
                    - Projects
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by project id
        /api/projects:
            get:
                tags:
                    - Projects
                parameters:
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Project'
                        description: Projects
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                security:
                    -
                        oauth2: []
                operationId: GetProjects
                summary: Retrieve all projects by id list if provided
        '/api/projects/{id}/hierarchy':
            get:
                tags:
                    - Projects
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Project not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetProjectHierarchy
                summary: Get project hierarchy for the given id
        /api/properties:
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/PropertyWrapper'
                    required: true
                tags:
                    - Properties
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Property'
                        description: Create new properties
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: CreateProperties
                summary: Create properties
                description: Used only by EPU (legacy route)
        '/api/samples/{id}':
            get:
                tags:
                    - Samples
                parameters:
                    -
                        name: id
                        description: 'Sample ID (e.g: 1024)'
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Sample'
                                example:
                                    entityType: Sample
                                    elementId: 4c63871f-fae5-4d90-bfcb-59cbb06eabe6
                                    creationDate: '0001-01-01T00:00:00'
                                    creator: 00000000-0000-0000-0000-000000000000
                                    creatorName: Athena team
                                    id: 1
                                    name: Sample name
                                    updateDate: '0001-01-01T00:00:00'
                        description: Sample successfully retrived
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Sample not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetSampleById
                summary: Get a sample by its ID
        /api/samples:
            get:
                tags:
                    - Samples
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Sample'
                                example:
                                    -
                                        entityType: Sample
                                        elementId: c6632f3a-1de2-4b05-9699-bc1e06652186
                                        creationDate: '0001-01-01T00:00:00'
                                        creator: 00000000-0000-0000-0000-000000000000
                                        creatorName: Athena team
                                        id: 1
                                        name: Sample 1 name
                                        updateDate: '0001-01-01T00:00:00'
                                    -
                                        entityType: Sample
                                        elementId: 45ef97fe-953f-419f-a013-0e24135fb1a9
                                        creationDate: '0001-01-01T00:00:00'
                                        creator: 00000000-0000-0000-0000-000000000000
                                        creatorName: Athena team
                                        id: 2
                                        name: Sample 2 name
                                        updateDate: '0001-01-01T00:00:00'
                        description: Sample list successfully retrived
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetSamples
                summary: Get list of samples
        /status:
            get:
                tags:
                    - Status
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ServiceStatusModel'
                        description: Service status successfully fetched
                    '500':
                        description: An internal error occurred
                operationId: GetServiceStatus
                summary: 'Fetch the service details (name, version, ...)'
        /api/status:
            put:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StatusUpdateModel'
                            example:
                                entityId: 1
                                entityType: Project
                                statusType: System
                                status: Deleting
                    required: true
                tags:
                    - api/status
                responses:
                    '204':
                        description: Status correctly set
                    '400':
                        description: 'Status model is null, incomplete or wrong / Status cannot be set on the given entity'
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: SetStatus
                summary: Sets a status on an entity
            delete:
                tags:
                    - api/status
                parameters:
                    -
                        name: entityId
                        schema:
                            format: int32
                            type: integer
                        in: query
                        required: true
                    -
                        name: entityType
                        schema:
                            $ref: '#/components/schemas/EntityType'
                        in: query
                        required: true
                    -
                        name: statusType
                        schema:
                            $ref: '#/components/schemas/StatusType'
                        in: query
                        required: true
                    -
                        name: status
                        schema:
                            type: string
                        in: query
                        required: true
                responses:
                    '204':
                        description: Status correctly removed
                    '400':
                        description: >-
                            Status model is null, incomplete or wrong / Status cannot be removed on the given
                            entity
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: RemoveStatus
                summary: Removes a status on an entity
        '/api/steps/{id}':
            get:
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Step'
                        description: Step
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetStepById
                summary: Get step by id
        '/api/steps/{id}/permissions':
            get:
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by step id
        '/api/steps/{id}/status':
            get:
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/StepStatusModel'
                        description: StepStatusModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetStatusByStepId
                summary: Get status by step id
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StepStatusModel'
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/StepStatusModel'
                        description: StepStatusUpdateModel
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: UpdateStatusByStepId
                summary: Update status by step id
        '/api/steps/{id}/order':
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StepOrderModel'
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Step'
                        description: Step
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: UpdateOrderByStepIdAsync
                summary: Update order by step id
        /api/steps:
            get:
                tags:
                    - Steps
                parameters:
                    -
                        name: workflowId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Step'
                        description: Steps
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetStepsByWorkflowId
                summary: Get steps for a given workflow
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StepCreationModel'
                tags:
                    - Steps
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Step'
                        description: Step
                    '400':
                        description: The Type is unknown
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: InstantiateStep
                summary: 'Instantiate a step in a Workflow, by Activity Template'
        '/api/steps/{id}/hierarchy':
            get:
                tags:
                    - Steps
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Step not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetStepHierarchy
                summary: Get step hierarchy for the given id
        '/api/users/{username}':
            put:
                tags:
                    - Users
                parameters:
                    -
                        name: username
                        description: 'Keycloak username (e.g: ''doe, john'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/User'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    email: john.doe@example.com
                                    firstName: John
                                    id: 00000000-0000-0000-0000-000000000000
                                    lastName: Doe
                                    updateDate: '0001-01-01T00:00:00'
                                    username: 'doe, john'
                        description: User successfully updated
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/User'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    email: john.doe@example.com
                                    firstName: John
                                    id: 00000000-0000-0000-0000-000000000000
                                    lastName: Doe
                                    updateDate: '0001-01-01T00:00:00'
                                    username: 'doe, john'
                        description: User successfully created
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: UpdateUserByUsername
                summary: Update a user by its Keycloak username. Creates it if it doesn't exist.
                description: >-
                    * If the given username doesn't exist in this service but matches one in Keycloak, it will be
                    created here.
    
                    * If the given username doesn't exist in this service nor in Keycloak (**unlikely**), this
                    will trigger a *500 internal server error*.
        '/api/users/{id}':
            get:
                tags:
                    - Users
                parameters:
                    -
                        name: id
                        description: 'User ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/User'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    email: john.doe@example.com
                                    firstName: John
                                    id: 00000000-0000-0000-0000-000000000000
                                    lastName: Doe
                                    updateDate: '0001-01-01T00:00:00'
                                    username: 'doe, john'
                        description: User successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetUserById
                summary: Get user by its ID
            delete:
                tags:
                    - Users
                parameters:
                    -
                        name: id
                        description: 'User ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: User successfully deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteUserById
                summary: Deletes a user by its ID
        '/api/users/{id}/permissions':
            get:
                tags:
                    - Users
                parameters:
                    -
                        name: id
                        description: 'User ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/UserPermissionDto'
                                example:
                                    -
                                        experimentId: 12
                                        permissionId: 00000000-0000-0000-0000-000000000000
                                        role: Owner
                                        userId: 00000000-0000-0000-0000-000000000000
                                        userName: 'doe, john'
                        description: User with permissions
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: GetUserPermissions
                summary: Get a user's permission by its ID
        /api/users/permissions:
            get:
                tags:
                    - Users
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/UserPermissionDto'
                                example:
                                    -
                                        experimentId: 12
                                        permissionId: 00000000-0000-0000-0000-000000000000
                                        role: Owner
                                        userId: 00000000-0000-0000-0000-000000000000
                                        userName: 'doe, john'
                        description: User with permissions
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetCurrentUserPermissions
                summary: Get current user's permission by its ID
        '/api/users/{id}/experiments/recents':
            get:
                tags:
                    - Users
                parameters:
                    -
                        name: id
                        description: 'User ID (e.g: ''xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'')'
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Experiment'
                        description: Experiments list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetUserRecentExperiments
                summary: >-
                    Get a user's 30 (or less) most recent experiments by its user ID, sorted by update date
                    descendant
        /api/users:
            get:
                tags:
                    - Users
                parameters:
                    -
                        name: username
                        description: 'Keycloak username (e.g: ''doe, john'')'
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/User'
                                example:
                                    -
                                        creationDate: '0001-01-01T00:00:00'
                                        email: john.doe@example.com
                                        firstName: John
                                        id: 00000000-0000-0000-0000-000000000000
                                        lastName: Doe
                                        updateDate: '0001-01-01T00:00:00'
                                        username: 'doe, john'
                                    -
                                        creationDate: '0001-01-01T00:00:00'
                                        email: jane.doe@example.com
                                        firstName: Jane
                                        id: 00000000-0000-0000-0000-000000000000
                                        lastName: Doe
                                        updateDate: '0001-01-01T00:00:00'
                                        username: 'doe, jane'
                        description: User list successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: SearchUsers
                summary: 'Searches for users. If no filter is applied, returns all users.'
        /api/users/me:
            get:
                tags:
                    - Users
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/User'
                                example:
                                    creationDate: '0001-01-01T00:00:00'
                                    email: john.doe@example.com
                                    firstName: John
                                    id: 00000000-0000-0000-0000-000000000000
                                    lastName: Doe
                                    updateDate: '0001-01-01T00:00:00'
                                    username: 'doe, john'
                        description: Current user successfully retrieved
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: User not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: SearchCurrentUser
                summary: Searches current user
        '/api/workflows/{id}':
            get:
                tags:
                    - Workflows
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Workflow'
                        description: Workflow
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetWorkflowById
                summary: Get workflow by id
        '/api/workflows/{id}/permissions':
            get:
                tags:
                    - Workflows
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/PermissionWrapperDto'
                        description: PermissionWrapper
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetPermissionsById
                summary: Get permissions by workflow id
        /api/workflows:
            get:
                tags:
                    - Workflows
                parameters:
                    -
                        name: experimentId
                        schema:
                            format: int32
                            type: integer
                        in: query
                    -
                        name: id
                        schema:
                            type: array
                            items:
                                format: int32
                                type: integer
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/Workflow'
                        description: Workflows
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetWorkflowsByExperimentId
                summary: Get workflows for a given experiment
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WorkflowCreationModel'
                tags:
                    - Workflows
                responses:
                    '201':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Workflow'
                        description: Workflow
                    '400':
                        description: The Type is unknown
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                deprecated: true
                security:
                    -
                        oauth2: []
                operationId: InstantiateWorkflow
                summary: 'Instantiate a workflow in an Experiment, by Activity Template'
        '/api/workflows/{id}/hierarchy':
            get:
                tags:
                    - Workflows
                parameters:
                    -
                        name: id
                        schema:
                            format: int32
                            type: integer
                        in: path
                        required: true
                responses:
                    '200':
                        description: EntityHierarchy
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Workflow not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetWorkflowHierarchy
                summary: Get worflow hierarchy for the given id
        '/api/elements/activity/{uuid}':
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityElementById
                summary: Get activity element by id
            delete:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '204':
                        description: Activity deleted
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: DeleteActivityById
                summary: Delete an activity by id
            patch:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityPatchRequestModel'
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: uuid
                        schema:
                            format: uuid
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Element not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PatchActivityElement
                summary: Update activity element by id
        /api/elements/activity:
            get:
                tags:
                    - Elements (Public)
                parameters:
                    -
                        name: Name
                        schema:
                            type: string
                        in: query
                    -
                        name: ParentId
                        schema:
                            pattern: '^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$'
                            type: string
                        in: query
                    -
                        name: ParentType
                        schema:
                            type: string
                        in: query
                    -
                        name: Status
                        schema:
                            type: string
                        in: query
                    -
                        name: TypeName
                        schema:
                            pattern: '^[0-9a-z\-]+(\.[0-9a-z\-]+)*$'
                            type: string
                        in: query
                    -
                        name: OrderBy
                        schema:
                            type: string
                        in: query
                    -
                        name: TypeVersion
                        schema:
                            pattern: '^(([0-9]|[1-9][0-9]*)(\.|\b)){3}$'
                            type: string
                        in: query
                    -
                        name: Ids
                        schema:
                            maxItems: 50
                            type: array
                            items:
                                format: uuid
                                type: string
                        in: query
                    -
                        name: PageNumber
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: PageSize
                        schema:
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                        in: query
                    -
                        name: OrderDirection
                        schema:
                            type: string
                        in: query
                    -
                        name: Include
                        schema:
                            type: string
                        in: query
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityResponseModelTypedListResponseModel'
                        description: Success
                    '400':
                        description: Bad request
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: GetActivityElements
                summary: Get activity elements
            post:
                requestBody:
                    content:
                        application/json;odata.metadata=minimal;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=minimal;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=minimal:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=full;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=full:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=none;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.metadata=none:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.streaming=true:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json;odata.streaming=false:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        text/plain:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/json-patch+json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        text/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                        application/*+json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostActivityElement
                summary: Create an activity element
        /api/elements/workflow/:
            post:
                requestBody:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivityCreationRequestModel'
                tags:
                    - Elements (Public)
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/ActivityResponseModelTypedObjectResponseModel'
                        description: Success
                    '401':
                        description: Unauthorized
                    '403':
                        description: Forbidden
                    '404':
                        description: Activity not found
                    '500':
                        description: An internal error occurred
                security:
                    -
                        oauth2: []
                operationId: PostActivityElement
                summary: Create a workflow element
    components:
        schemas:
            Action:
                enum:
                    - Unknown
                    - Create
                    - Move
                    - View
                    - Delete
                    - Edit
                    - Create_Project
                    - Move_Project
                    - View_Project
                    - Delete_Project
                    - Edit_Project
                    - Create_Experiment
                    - Move_Experiment
                    - View_Experiment
                    - Delete_Experiment
                    - Edit_Experiment
                    - Create_Workflow
                    - Move_Workflow
                    - View_Workflow
                    - Delete_Workflow
                    - Edit_Workflow
                    - Create_Step
                    - Move_Step
                    - View_Step
                    - Delete_Step
                    - Edit_Step
                    - Create_Dataset
                    - Move_Dataset
                    - View_Dataset
                    - Delete_Dataset
                    - Edit_Dataset
                    - Create_File
                    - Move_File
                    - View_File
                    - Delete_File
                    - Edit_File
                    - Download_File
                    - Edit_Note
                    - Create_Annotation
                    - Delete_Annotation
                    - Edit_Annotation
                    - View_Annotation
                    - Move_Annotation
                    - Archive_Dataset
                    - Restore_Dataset
                    - Create_Activity
                    - Move_Activity
                    - View_Activity
                    - Delete_Activity
                    - Edit_Activity
                    - Archive_Activity
                    - Restore_Activity
                type: string
            ActionModelListExample:
                type: object
                additionalProperties: false
            ActivityChildCountModel:
                required:
                    - firstLevelTotal
                type: object
                properties:
                    firstLevelTotal:
                        format: int32
                        type: integer
                additionalProperties: false
            ActivityClassification:
                enum:
                    - AcquisitionSet
                    - Acquisition
                    - Processing
                type: string
            ActivityClassificationModel:
                required:
                    - classification
                    - id
                    - name
                type: object
                properties:
                    classification:
                        $ref: '#/components/schemas/ActivityClassification'
                    id:
                        format: uuid
                        type: string
                    name:
                        minLength: 1
                        type: string
                additionalProperties: false
            ActivityCreationModel:
                required:
                    - name
                    - parentId
                    - stepId
                type: object
                properties:
                    parentId:
                        format: int32
                        type: integer
                    stepId:
                        format: int32
                        type: integer
                    name:
                        minLength: 1
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    activityType:
                        $ref: '#/components/schemas/ActivityType'
                    activityFilterId:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    processors:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/ProcessorType'
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                    contentType:
                        $ref: '#/components/schemas/ContentType'
                additionalProperties: false
            ActivityCreationRequestModel:
                required:
                    - name
                    - parentId
                    - type
                type: object
                properties:
                    name:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    type:
                        $ref: '#/components/schemas/ActivityTypeSelectionModel'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyCreationRequestModel'
                    status:
                        nullable: true
                        type: string
                    parentId:
                        format: uuid
                        type: string
                additionalProperties: false
            ActivityDao:
                required:
                    - archived
                    - creationDate
                    - creatorId
                    - experimentId
                    - hierarchy
                    - id
                    - name
                    - parentId
                    - status
                    - stepId
                    - updateDate
                type: object
                properties:
                    activityClassification:
                        $ref: '#/components/schemas/ActivityClassificationModel'
                    activityFilter:
                        $ref: '#/components/schemas/ActivityFilterModel'
                    activityType:
                        $ref: '#/components/schemas/ActivityTypeModel'
                    activityTypeReference:
                        $ref: '#/components/schemas/ActivityTypeReference'
                    archived:
                        type: boolean
                    creationDate:
                        format: date-time
                        type: string
                    creatorId:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    hierarchy:
                        minLength: 1
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        minLength: 1
                        type: string
                    parentId:
                        format: int32
                        type: integer
                    processors:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/ProcessorType'
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                    status:
                        $ref: '#/components/schemas/Status'
                    statusId:
                        format: int32
                        type: integer
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    contentType:
                        $ref: '#/components/schemas/ContentType'
                    stepId:
                        format: int32
                        type: integer
                    thumbnailStorageId:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                    elementId:
                        format: uuid
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    activityTypeReferenceId:
                        format: int32
                        type: integer
                additionalProperties: false
            ActivityFilterCreationModel:
                required:
                    - filterRequest
                    - name
                    - value
                type: object
                properties:
                    activityId:
                        nullable: true
                        format: int32
                        type: integer
                    filterRequest: {}
                    name:
                        minLength: 1
                        type: string
                    value: {}
                additionalProperties: false
            ActivityFilterModel:
                required:
                    - creationDate
                    - filterRequest
                    - id
                    - name
                    - updateDate
                    - userId
                    - value
                type: object
                properties:
                    creationDate:
                        format: date-time
                        type: string
                    filterRequest:
                        minLength: 1
                        type: string
                    id:
                        format: uuid
                        type: string
                    name:
                        minLength: 1
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                    userId:
                        minLength: 1
                        type: string
                    value:
                        minLength: 1
                        type: string
                additionalProperties: false
            ActivityFilterUpdateModel:
                type: object
                properties:
                    filterRequest:
                        nullable: true
                    name:
                        nullable: true
                        type: string
                    value:
                        nullable: true
                additionalProperties: false
            ActivityImportResponseModel:
                required:
                    - activityClassification
                    - activityType
                    - elementId
                    - experimentId
                    - id
                    - name
                    - parentId
                    - status
                    - stepId
                    - typeName
                type: object
                properties:
                    elementId:
                        format: uuid
                        type: string
                    typeName:
                        minLength: 1
                        type: string
                    id:
                        format: int32
                        type: integer
                    parentId:
                        format: int32
                        type: integer
                    name:
                        minLength: 1
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    stepId:
                        format: int32
                        type: integer
                    status:
                        $ref: '#/components/schemas/Status'
                    activityClassification:
                        $ref: '#/components/schemas/ActivityClassificationModel'
                    activityType:
                        $ref: '#/components/schemas/ActivityTypeModel'
                additionalProperties: false
            ActivityPatchRequestModel:
                type: object
                properties:
                    description:
                        $ref: '#/components/schemas/StringValueInput'
                    name:
                        $ref: '#/components/schemas/StringValueInput'
                    status:
                        $ref: '#/components/schemas/ActivityStatusEnumListValueInput'
                    parentId:
                        $ref: '#/components/schemas/GuidNullableValueInput'
                    properties:
                        $ref: '#/components/schemas/PropertyUpdateRequestModelListValueInput'
                additionalProperties: false
            ActivityResponseModelTypedListResponseModel:
                required:
                    - data
                    - pagination
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    pagination:
                        $ref: '#/components/schemas/PaginationResponseModel'
                    data:
                        type: array
                        items:
                            $ref: '#/components/schemas/ActivityResponseModel'
                additionalProperties: false
            ActivityResponseModelTypedObjectResponseModel:
                required:
                    - data
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    data:
                        $ref: '#/components/schemas/ActivityResponseModel'
                additionalProperties: false
            ActivityStatus:
                type: object
                properties:
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                    definition:
                        nullable: true
                        type: string
                additionalProperties: false
            ActivityStatusEnumListValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            ActivityStatusLegacyModel:
                required:
                    - status
                type: object
                properties:
                    status:
                        $ref: '#/components/schemas/Status'
                additionalProperties: false
            ActivityStatusModel:
                type: object
                properties:
                    name:
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                    definition:
                        nullable: true
                        type: string
                additionalProperties: false
            ActivityType:
                enum:
                    - Free
                    - Run
                    - Micrograph
                    - MotionCorrection
                    - CTFDetermination
                type: string
            ActivityTypeModel:
                required:
                    - id
                    - name
                    - type
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    name:
                        minLength: 1
                        type: string
                    type:
                        $ref: '#/components/schemas/ActivityType'
                additionalProperties: false
            ActivityTypeReference:
                type: object
                properties:
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    version:
                        nullable: true
                        type: string
                    displayName:
                        nullable: true
                        type: string
                    creationDate:
                        format: date-time
                        type: string
                additionalProperties: false
            ActivityTypeResponseModel:
                required:
                    - createdDateTime
                    - displayName
                    - name
                    - version
                type: object
                properties:
                    name:
                        minLength: 1
                        pattern: '^[0-9a-z\-]+(\.[0-9a-z\-]+)*$'
                        type: string
                    version:
                        minLength: 1
                        pattern: '^(([0-9]|[1-9][0-9]*)(\.|\b)){3}$'
                        type: string
                    displayName:
                        minLength: 1
                        type: string
                    createdDateTime:
                        format: date-time
                        type: string
                additionalProperties: false
            ActivityTypeSelectionModel:
                type: object
                properties:
                    id:
                        nullable: true
                        format: uuid
                        type: string
                    name:
                        nullable: true
                        pattern: '^[0-9a-z\-]+(\.[0-9a-z\-]+)*$'
                        type: string
                    version:
                        nullable: true
                        pattern: '^(([0-9]|[1-9][0-9]*)(\.|\b)){3}$'
                        type: string
                additionalProperties: false
            AggregateElementPermission:
                type: object
                properties:
                    elementId:
                        format: uuid
                        type: string
                    elementPermissionId:
                        format: uuid
                        type: string
                    element:
                        $ref: '#/components/schemas/Element'
                    elementPermission:
                        $ref: '#/components/schemas/ElementPermission'
                additionalProperties: false
            Annotation:
                type: object
                properties:
                    fileId:
                        nullable: true
                        format: int32
                        type: integer
                    canvas:
                        nullable: true
                        type: string
                    data:
                        nullable: true
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            AuthorResponseModel:
                required:
                    - id
                type: object
                properties:
                    email:
                        nullable: true
                        type: string
                    firstname:
                        nullable: true
                        type: string
                    id:
                        format: uuid
                        type: string
                    lastname:
                        nullable: true
                        type: string
                    registrationDateTime:
                        format: date-time
                        type: string
                additionalProperties: false
            BaseLocationModel:
                required:
                    - containerId
                    - type
                type: object
                properties:
                    containerId:
                        format: uuid
                        type: string
                    type:
                        minLength: 1
                        type: string
                additionalProperties: false
            BaseLocationModelValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            Boundary:
                type: object
                properties:
                    value:
                        $ref: '#/components/schemas/IComparable'
                    isInclusive:
                        type: boolean
                additionalProperties: false
            BoundaryModel:
                required:
                    - isInclusive
                    - value
                type: object
                properties:
                    value: {}
                    isInclusive:
                        type: boolean
                additionalProperties: false
            Breadcrumb:
                type: object
                properties:
                    breadcrumbId:
                        format: int32
                        type: integer
                additionalProperties: false
            Canvas:
                type: object
                properties:
                    height:
                        format: int32
                        type: integer
                    '@id':
                        nullable: true
                        type: string
                    images:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Image'
                    label:
                        nullable: true
                        type: string
                    otherContent:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/OtherContent'
                    '@type':
                        nullable: true
                        type: string
                    width:
                        format: int32
                        type: integer
                    thumbnail:
                        $ref: '#/components/schemas/Thumbnail'
                additionalProperties: false
            Comment:
                type: object
                properties:
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    content:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            ContentType:
                enum:
                    - Basic
                    - VolumetricData
                type: string
            Dataset:
                required:
                    - status
                    - stepId
                type: object
                properties:
                    archived:
                        type: boolean
                    description:
                        nullable: true
                        type: string
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                    status:
                        $ref: '#/components/schemas/Status'
                    stepId:
                        format: int32
                        type: integer
                    thumbnail:
                        nullable: true
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            DatasetCreationModel:
                required:
                    - name
                    - stepId
                type: object
                properties:
                    name:
                        minLength: 1
                        type: string
                    stepId:
                        format: int32
                        type: integer
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                additionalProperties: false
            DatasetUpdateModel:
                type: object
                properties:
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                additionalProperties: false
            Element:
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    class:
                        $ref: '#/components/schemas/ElementClass'
                    experimentId:
                        nullable: true
                        format: int32
                        type: integer
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    links:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Link'
                    allProperties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/ElementProperty'
                    permissions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/ElementPermission'
                    allPermissions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/AggregateElementPermission'
                    elementState:
                        $ref: '#/components/schemas/ElementState'
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    parent:
                        $ref: '#/components/schemas/Element'
                additionalProperties: false
            ElementClass:
                enum:
                    - activity
                    - file
                    - item
                    - folder
                    - Sample
                    - Grid
                type: string
            ElementObjectTypeEnumList:
                enum:
                    - activity
                    - file
                    - item
                    - folder
                type: string
            ElementPatchRequestModel:
                type: object
                properties:
                    systemStates:
                        $ref: '#/components/schemas/StringListValueInput'
                additionalProperties: false
            ElementPermission:
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    role:
                        $ref: '#/components/schemas/PermissionRole'
                    type:
                        $ref: '#/components/schemas/PermissionType'
                    value:
                        nullable: true
                        format: uuid
                        type: string
                    creationDate:
                        format: date-time
                        type: string
                    refElementId:
                        format: uuid
                        type: string
                    element:
                        $ref: '#/components/schemas/Element'
                additionalProperties: false
            ElementProperty:
                type: object
                properties:
                    elementId:
                        format: uuid
                        type: string
                    propertyId:
                        format: int32
                        type: integer
                    element:
                        $ref: '#/components/schemas/Element'
                    property:
                        $ref: '#/components/schemas/Property'
                additionalProperties: false
            ElementState:
                type: object
                properties:
                    elementId:
                        format: uuid
                        type: string
                additionalProperties: false
            EntityType:
                enum:
                    - Project
                    - Experiment
                    - Workflow
                    - Step
                    - Dataset
                    - File
                    - Note
                    - Annotation
                    - Sample
                    - Grid
                    - Activity
                type: string
            Experiment:
                type: object
                properties:
                    breadcrumb:
                        $ref: '#/components/schemas/Breadcrumb'
                    comments:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Comment'
                    manifest:
                        $ref: '#/components/schemas/Manifest'
                    permissions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Permission'
                    project:
                        $ref: '#/components/schemas/Project'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    workflows:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Workflow'
                    childrenCount:
                        format: int32
                        type: integer
                    description:
                        nullable: true
                        type: string
                    projectId:
                        format: int32
                        type: integer
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    visibility:
                        $ref: '#/components/schemas/LegacyVisibility'
                    elementId:
                        format: uuid
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            File:
                type: object
                properties:
                    activity:
                        $ref: '#/components/schemas/ActivityDao'
                    annotations:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Annotation'
                    breadcrumb:
                        $ref: '#/components/schemas/Breadcrumb'
                    manifest:
                        $ref: '#/components/schemas/Manifest'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    step:
                        $ref: '#/components/schemas/Step'
                    user:
                        $ref: '#/components/schemas/User'
                    activityHierarchy:
                        nullable: true
                        type: string
                    activityId:
                        nullable: true
                        format: int32
                        type: integer
                    archived:
                        type: boolean
                    convertedStorageId:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    extension:
                        nullable: true
                        type: string
                    imageType:
                        nullable: true
                        type: string
                    contentType:
                        nullable: true
                        type: string
                    isConvertible:
                        type: boolean
                    size:
                        format: int64
                        type: integer
                    stepId:
                        nullable: true
                        format: int32
                        type: integer
                    storageId:
                        nullable: true
                        type: string
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    thumbnailStorageId:
                        nullable: true
                        type: string
                    elementId:
                        format: uuid
                        type: string
                    element:
                        $ref: '#/components/schemas/Element'
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            FileCreationModel:
                required:
                    - blobId
                    - entityId
                    - entityType
                    - isConvertible
                type: object
                properties:
                    blobId:
                        minLength: 1
                        type: string
                    entityId:
                        format: int32
                        type: integer
                    entityType:
                        $ref: '#/components/schemas/EntityType'
                    isConvertible:
                        type: boolean
                additionalProperties: false
            FileCreationResponseExample:
                type: object
                additionalProperties: false
            FileElementCreationRequestModel:
                required:
                    - blobId
                    - elementId
                    - isConvertible
                type: object
                properties:
                    blobId:
                        minLength: 1
                        type: string
                    elementId:
                        format: uuid
                        type: string
                    isConvertible:
                        type: boolean
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyCreationRequestModel'
                additionalProperties: false
            FileResponseModel:
                required:
                    - author
                    - contentType
                    - createdDateTime
                    - extension
                    - id
                    - name
                    - properties
                    - size
                type: object
                properties:
                    contentType:
                        minLength: 1
                        type: string
                    extension:
                        minLength: 1
                        type: string
                    name:
                        minLength: 1
                        type: string
                    id:
                        format: uuid
                        type: string
                    parentId:
                        format: uuid
                        type: string
                    path:
                        nullable: true
                        type: string
                    size:
                        format: double
                        type: number
                    properties:
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyResponseModel'
                    author:
                        $ref: '#/components/schemas/AuthorResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        nullable: true
                        format: date-time
                        type: string
                    _links:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/NavigationLinkResponseModel'
                    lifecycleState:
                        $ref: '#/components/schemas/SystemStateEnumList'
                additionalProperties: false
            FileResponseModelTypedObjectResponseModel:
                required:
                    - data
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    data:
                        $ref: '#/components/schemas/FileResponseModel'
                additionalProperties: false
            FileUpdateRequestModel:
                type: object
                properties:
                    contentType:
                        $ref: '#/components/schemas/StringValueInput'
                    extension:
                        $ref: '#/components/schemas/StringValueInput'
                    name:
                        $ref: '#/components/schemas/StringValueInput'
                    properties:
                        $ref: '#/components/schemas/PropertyUpdateRequestModelListValueInput'
                additionalProperties: false
            FolderCreationRequestModel:
                required:
                    - displayName
                type: object
                properties:
                    displayName:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyCreationRequestModel'
                additionalProperties: false
            FolderPatchRequestModel:
                type: object
                properties:
                    displayName:
                        $ref: '#/components/schemas/StringValueInput'
                    description:
                        $ref: '#/components/schemas/StringValueInput'
                    parentId:
                        $ref: '#/components/schemas/GuidValueInput'
                    properties:
                        $ref: '#/components/schemas/PropertyUpdateRequestModelListValueInput'
                additionalProperties: false
            FolderResponseModel:
                required:
                    - author
                    - createdDateTime
                    - displayName
                    - id
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    displayName:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyResponseModel'
                    author:
                        $ref: '#/components/schemas/AuthorResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        format: date-time
                        type: string
                    _links:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/NavigationLinkResponseModel'
                    lifecycleState:
                        $ref: '#/components/schemas/SystemStateEnumList'
                additionalProperties: false
            FolderResponseModelTypedListResponseModel:
                required:
                    - data
                    - pagination
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    pagination:
                        $ref: '#/components/schemas/PaginationResponseModel'
                    data:
                        type: array
                        items:
                            $ref: '#/components/schemas/FolderResponseModel'
                additionalProperties: false
            FolderResponseModelTypedObjectResponseModel:
                required:
                    - data
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    data:
                        $ref: '#/components/schemas/FolderResponseModel'
                additionalProperties: false
            GenericEntityElement:
                type: object
                properties:
                    id:
                        format: int32
                        type: integer
                    elementId:
                        format: uuid
                        type: string
                    name:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    creationDate:
                        format: date-time
                        type: string
                    updateDate:
                        nullable: true
                        format: date-time
                        type: string
                    entityType:
                        nullable: true
                        type: string
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    deleting:
                        type: boolean
                    element:
                        $ref: '#/components/schemas/Element'
                additionalProperties: false
            Grid:
                type: object
                properties:
                    entityType:
                        $ref: '#/components/schemas/EntityType'
                    elementId:
                        format: uuid
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            GuidNullableValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            GuidValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            IComparable:
                type: object
                additionalProperties: false
            Image:
                type: object
                properties:
                    '@id':
                        nullable: true
                        type: string
                    motivation:
                        nullable: true
                        type: string
                    'on':
                        nullable: true
                        type: string
                    resource:
                        $ref: '#/components/schemas/Resource'
                    '@type':
                        nullable: true
                        type: string
                additionalProperties: false
            ItemCreationRequestModel:
                required:
                    - displayName
                    - type
                type: object
                properties:
                    type:
                        $ref: '#/components/schemas/ItemTypeSelectionModel'
                    displayName:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    originId:
                        nullable: true
                        format: uuid
                        type: string
                    location:
                        $ref: '#/components/schemas/BaseLocationModel'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyCreationRequestModel'
                additionalProperties: false
            ItemLocationQueryRequestModel:
                type: object
                properties:
                    from:
                        nullable: true
                        format: date-time
                        type: string
                    until:
                        nullable: true
                        format: date-time
                        type: string
                    hasLocation:
                        nullable: true
                        type: boolean
                    location:
                        $ref: '#/components/schemas/LocationFilterModel'
                    itemId:
                        nullable: true
                        format: uuid
                        type: string
                    pageNumber:
                        nullable: true
                        format: int32
                        maximum: 2147483647
                        minimum: 1
                        type: integer
                    pageSize:
                        nullable: true
                        format: int32
                        maximum: 2147483647
                        minimum: 1
                        type: integer
                    orderDirection:
                        nullable: true
                        type: string
                    orderBy:
                        nullable: true
                        type: string
                additionalProperties: false
            ItemLocationQueryRequestModelTypedObjectResponseModel:
                required:
                    - data
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    data:
                        $ref: '#/components/schemas/ItemLocationQueryRequestModel'
                additionalProperties: false
            ItemResponseModel:
                required:
                    - author
                    - createdDateTime
                    - id
                    - type
                    - updatedDateTime
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    type:
                        $ref: '#/components/schemas/ItemTypeLightResponseModel'
                    displayName:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    originId:
                        nullable: true
                        format: uuid
                        type: string
                    location:
                        $ref: '#/components/schemas/BaseLocationModel'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyResponseModel'
                    author:
                        $ref: '#/components/schemas/AuthorResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        format: date-time
                        type: string
                    _links:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/NavigationLinkResponseModel'
                    lifecycleState:
                        $ref: '#/components/schemas/SystemStateEnumList'
                additionalProperties: false
            ItemResponseModelTypedObjectResponseModel:
                required:
                    - data
                type: object
                properties:
                    object:
                        $ref: '#/components/schemas/ObjectTypeEnumList'
                    data:
                        $ref: '#/components/schemas/ItemResponseModel'
                additionalProperties: false
            ItemTypeCategoryResponseModel:
                required:
                    - createdDateTime
                    - description
                    - displayName
                    - name
                    - version
                type: object
                properties:
                    name:
                        minLength: 1
                        type: string
                    displayName:
                        minLength: 1
                        type: string
                    description:
                        minLength: 1
                        type: string
                    version:
                        minLength: 1
                        type: string
                    parentCategory:
                        $ref: '#/components/schemas/ItemTypeCategoryResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                additionalProperties: false
            ItemTypeLightResponseModel:
                required:
                    - category
                    - id
                    - name
                    - version
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    name:
                        minLength: 1
                        type: string
                    displayName:
                        nullable: true
                        type: string
                    version:
                        minLength: 1
                        type: string
                    category:
                        $ref: '#/components/schemas/ItemTypeCategoryResponseModel'
                additionalProperties: false
            ItemTypeSelectionModel:
                type: object
                properties:
                    id:
                        nullable: true
                        format: uuid
                        type: string
                    name:
                        nullable: true
                        type: string
                    version:
                        nullable: true
                        type: string
                additionalProperties: false
            ItemUpdateRequestModel:
                type: object
                properties:
                    displayName:
                        $ref: '#/components/schemas/StringValueInput'
                    description:
                        $ref: '#/components/schemas/StringValueInput'
                    parentId:
                        $ref: '#/components/schemas/GuidNullableValueInput'
                    location:
                        $ref: '#/components/schemas/BaseLocationModelValueInput'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyUpdateRequestModel'
                additionalProperties: false
            LegacyVisibility:
                enum:
                    - NotPublic
                    - PublicViewer
                    - PublicCollaborator
                type: string
            Link:
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    type:
                        $ref: '#/components/schemas/RelationType'
                    creationDate:
                        format: date-time
                        type: string
                    creatorId:
                        nullable: true
                        type: string
                    creator:
                        $ref: '#/components/schemas/User'
                    sourceId:
                        format: uuid
                        type: string
                    source:
                        $ref: '#/components/schemas/Element'
                    targetId:
                        format: uuid
                        type: string
                    target:
                        $ref: '#/components/schemas/Element'
                additionalProperties: false
            LinkCreationRequestModel:
                required:
                    - sourceId
                    - targetId
                    - type
                type: object
                properties:
                    sourceId:
                        format: uuid
                        type: string
                    targetId:
                        format: uuid
                        type: string
                    type:
                        minLength: 1
                        type: string
                additionalProperties: false
            LinkNodeTypeEnumList:
                enum:
                    - source
                    - target
                type: string
            LinkTypeEnumList:
                enum:
                    - relatesTo
                    - isSourceOf
                type: string
            LocationFilterModel:
                type: object
                properties:
                    containerId:
                        nullable: true
                        format: uuid
                        type: string
                    containerType:
                        nullable: true
                        type: string
                    type:
                        nullable: true
                        type: string
                additionalProperties: false
            Manifest:
                type: object
                properties:
                    attribution:
                        nullable: true
                        type: string
                    '@context':
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                    license:
                        nullable: true
                        type: string
                    logo:
                        nullable: true
                        type: string
                    '@id':
                        nullable: true
                        type: string
                    metadata:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Metadata'
                    rendering:
                        $ref: '#/components/schemas/Rendering'
                    seeAlso:
                        $ref: '#/components/schemas/SeeAlso'
                    sequences:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Sequence'
                    service:
                        $ref: '#/components/schemas/Service'
                    structures:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Structure'
                    '@type':
                        nullable: true
                        type: string
                    within:
                        nullable: true
                        type: string
                additionalProperties: false
            Metadata:
                type: object
                properties:
                    label:
                        nullable: true
                        type: string
                    value:
                        nullable: true
                additionalProperties: false
            MetadataTypeScope:
                enum:
                    - User
                    - Standard
                    - Application
                    - Domain
                type: string
            NavigationLinkResponseModel:
                required:
                    - id
                    - location
                    - relationship
                    - remote
                    - type
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    location:
                        minLength: 1
                        type: string
                    relationship:
                        $ref: '#/components/schemas/LinkNodeTypeEnumList'
                    type:
                        $ref: '#/components/schemas/LinkTypeEnumList'
                    remote:
                        $ref: '#/components/schemas/RemoteNavigationLinkResponseModel'
                additionalProperties: false
            Note:
                type: object
                properties:
                    step:
                        $ref: '#/components/schemas/Step'
                    workflow:
                        $ref: '#/components/schemas/Workflow'
                    content:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    stepId:
                        nullable: true
                        format: int32
                        type: integer
                    workflowId:
                        nullable: true
                        format: int32
                        type: integer
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            ObjectTypeEnumList:
                enum:
                    - error
                    - activity
                    - property
                    - file
                    - propertyType
                    - activityType
                    - configuration
                    - item
                    - itemType
                    - itemTypeCategory
                    - itemTypeLocation
                    - link
                    - folder
                    - itemLocation
                    - permission
                    - branch
                type: string
            Operation:
                enum:
                    - Create
                    - Move
                    - View
                    - Delete
                    - Edit
                    - Download
                    - Archive
                    - Restore
                type: string
            OtherContent:
                type: object
                properties:
                    '@id':
                        nullable: true
                        type: string
                    '@type':
                        nullable: true
                        type: string
                    within:
                        nullable: true
                additionalProperties: false
            PaginationResponseModel:
                required:
                    - objectCount
                    - pageCount
                    - pageNumber
                    - pageSize
                type: object
                properties:
                    pageCount:
                        format: int32
                        type: integer
                    pageNumber:
                        format: int32
                        type: integer
                    pageSize:
                        format: int32
                        type: integer
                    objectCount:
                        format: int64
                        type: integer
                additionalProperties: false
            PatchActivityImportRequestModel:
                type: object
                properties:
                    name:
                        $ref: '#/components/schemas/StringValueInput'
                    status:
                        $ref: '#/components/schemas/StatusValueInput'
                    processors:
                        $ref: '#/components/schemas/ProcessorTypeListValueInput'
                additionalProperties: false
            Permission:
                type: object
                properties:
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    user:
                        $ref: '#/components/schemas/User'
                    experimentId:
                        format: int32
                        type: integer
                    id:
                        nullable: true
                        type: string
                    role:
                        $ref: '#/components/schemas/Role'
                    userId:
                        nullable: true
                        type: string
                    userName:
                        nullable: true
                        type: string
                additionalProperties: false
            PermissionCreationRequestModel:
                required:
                    - elementId
                    - role
                    - type
                type: object
                properties:
                    elementId:
                        format: uuid
                        type: string
                    role:
                        minLength: 1
                        type: string
                    type:
                        minLength: 1
                        type: string
                    value:
                        nullable: true
                        format: uuid
                        type: string
                additionalProperties: false
            PermissionRole:
                enum:
                    - Viewer
                    - Collaborator
                    - Owner
                type: string
            PermissionType:
                enum:
                    - user
                    - group
                    - everyone
                type: string
            PermissionWrapperDto:
                type: object
                properties:
                    visibility:
                        $ref: '#/components/schemas/Visibility'
                    role:
                        $ref: '#/components/schemas/Role'
                    users:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/UserModel'
                additionalProperties: false
            PostActivityImportRequestModel:
                required:
                    - name
                    - parentId
                    - stepId
                type: object
                properties:
                    parentId:
                        format: int32
                        type: integer
                    stepId:
                        format: int32
                        type: integer
                    name:
                        minLength: 1
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    activityType:
                        $ref: '#/components/schemas/ActivityType'
                additionalProperties: false
            ProcessorType:
                enum:
                    - Unknown
                    - MotionCorrection
                    - CTFDetermination
                    - Ctar
                type: string
            ProcessorTypeListValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            Project:
                type: object
                properties:
                    breadcrumb:
                        $ref: '#/components/schemas/Breadcrumb'
                    experiments:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Experiment'
                    manifest:
                        $ref: '#/components/schemas/Manifest'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    childrenCount:
                        format: int32
                        type: integer
                    description:
                        nullable: true
                        type: string
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    elementId:
                        format: uuid
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            Property:
                type: object
                properties:
                    activity:
                        $ref: '#/components/schemas/ActivityDao'
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    grid:
                        $ref: '#/components/schemas/Grid'
                    project:
                        $ref: '#/components/schemas/Project'
                    propertyType:
                        $ref: '#/components/schemas/PropertyType'
                    sample:
                        $ref: '#/components/schemas/Sample'
                    step:
                        $ref: '#/components/schemas/Step'
                    unit:
                        $ref: '#/components/schemas/Unit'
                    workflow:
                        $ref: '#/components/schemas/Workflow'
                    element:
                        $ref: '#/components/schemas/Element'
                    activityId:
                        nullable: true
                        format: int32
                        type: integer
                    experimentId:
                        nullable: true
                        format: int32
                        type: integer
                    fileId:
                        nullable: true
                        format: int32
                        type: integer
                    gridId:
                        nullable: true
                        format: int32
                        type: integer
                    refElementId:
                        nullable: true
                        format: uuid
                        type: string
                    group:
                        nullable: true
                        type: string
                    index:
                        format: int32
                        type: integer
                    projectId:
                        nullable: true
                        format: int32
                        type: integer
                    propertyTypeId:
                        format: int32
                        type: integer
                    sampleId:
                        nullable: true
                        format: int32
                        type: integer
                    stepId:
                        nullable: true
                        format: int32
                        type: integer
                    unitId:
                        nullable: true
                        format: int32
                        type: integer
                    value:
                        nullable: true
                    valueBool:
                        nullable: true
                        type: boolean
                    valueDouble:
                        nullable: true
                        format: double
                        type: number
                    valueDtm:
                        nullable: true
                        format: date-time
                        type: string
                    valueFloat:
                        nullable: true
                        format: double
                        type: number
                    valueInt:
                        nullable: true
                        format: int64
                        type: integer
                    valueJson:
                        nullable: true
                        type: string
                    valueString:
                        nullable: true
                        type: string
                    workflowId:
                        nullable: true
                        format: int32
                        type: integer
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            PropertyCreationRequestModel:
                required:
                    - type
                    - value
                type: object
                properties:
                    value:
                        minLength: 1
                        type: string
                    type:
                        $ref: '#/components/schemas/PropertyTypeSelectionModel'
                additionalProperties: false
            PropertyResponseModel:
                required:
                    - createdDateTime
                    - type
                    - value
                type: object
                properties:
                    type:
                        $ref: '#/components/schemas/PropertyTypeResponseModel'
                    author:
                        $ref: '#/components/schemas/AuthorResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        nullable: true
                        format: date-time
                        type: string
                    value:
                        minLength: 1
                        type: string
                additionalProperties: false
            PropertyScope:
                enum:
                    - Unknown
                    - System
                    - User
                type: string
            PropertyType:
                type: object
                properties:
                    scope:
                        $ref: '#/components/schemas/PropertyScope'
                    metadataScope:
                        $ref: '#/components/schemas/MetadataTypeScope'
                    displayName:
                        nullable: true
                        type: string
                    dataType:
                        nullable: true
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    version:
                        nullable: true
                        type: string
                    displayUnits:
                        nullable: true
                        type: string
                    storageUnits:
                        nullable: true
                        type: string
                    enumList:
                        nullable: true
                        type: string
                    description:
                        nullable: true
                        type: string
                    elementId:
                        format: uuid
                        type: string
                    possibleValues:
                        nullable: true
                        type: array
                        items: {}
                    range:
                        $ref: '#/components/schemas/RangeConstraint'
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            PropertyTypeCreationRequestModel:
                required:
                    - dataType
                    - displayName
                type: object
                properties:
                    displayName:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    dataType:
                        minLength: 1
                        type: string
                    possibleValues:
                        nullable: true
                        minItems: 1
                        type: array
                        items: {}
                    range:
                        $ref: '#/components/schemas/PropertyTypeRangeModel'
                additionalProperties: false
            PropertyTypeRangeModel:
                required:
                    - lower
                    - upper
                type: object
                properties:
                    lower:
                        $ref: '#/components/schemas/BoundaryModel'
                    upper:
                        $ref: '#/components/schemas/BoundaryModel'
                additionalProperties: false
            PropertyTypeResponseModel:
                required:
                    - createdDateTime
                    - dataType
                    - displayName
                    - name
                    - version
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    name:
                        minLength: 1
                        pattern: '^[0-9a-z\-]+(\.[0-9a-z\-]+)*$'
                        type: string
                    displayName:
                        minLength: 1
                        type: string
                    dataType:
                        minLength: 1
                        type: string
                    createdDateTime:
                        format: date-time
                        type: string
                    version:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    possibleValues:
                        nullable: true
                        type: array
                        items: {}
                    range:
                        $ref: '#/components/schemas/PropertyTypeRangeModel'
                additionalProperties: false
            PropertyTypeSelectionModel:
                type: object
                properties:
                    id:
                        nullable: true
                        format: uuid
                        type: string
                    name:
                        nullable: true
                        pattern: '^[0-9a-z\-]+(\.[0-9a-z\-]+)*$'
                        type: string
                    version:
                        nullable: true
                        type: string
                additionalProperties: false
            PropertyUpdateRequestModel:
                required:
                    - type
                    - value
                type: object
                properties:
                    value:
                        $ref: '#/components/schemas/StringValueInput'
                    type:
                        $ref: '#/components/schemas/PropertyTypeSelectionModel'
                additionalProperties: false
            PropertyUpdateRequestModelListValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            PropertyWrapper:
                type: object
                properties:
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    shouldPublishEvent:
                        type: boolean
                additionalProperties: false
            RangeConstraint:
                type: object
                properties:
                    lower:
                        $ref: '#/components/schemas/Boundary'
                    upper:
                        $ref: '#/components/schemas/Boundary'
                additionalProperties: false
            RelationType:
                enum:
                    - relatesTo
                    - isSourceOf
                type: string
            RemoteNavigationLinkResponseModel:
                required:
                    - id
                    - location
                    - object
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    location:
                        minLength: 1
                        type: string
                    object:
                        $ref: '#/components/schemas/ElementObjectTypeEnumList'
                additionalProperties: false
            Rendering:
                type: object
                properties:
                    format:
                        nullable: true
                        type: string
                    '@id':
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                additionalProperties: false
            Resource:
                type: object
                properties:
                    format:
                        nullable: true
                        type: string
                    height:
                        format: int32
                        type: integer
                    '@id':
                        nullable: true
                        type: string
                    service:
                        $ref: '#/components/schemas/Service'
                    '@type':
                        nullable: true
                        type: string
                    width:
                        format: int32
                        type: integer
                additionalProperties: false
            Role:
                enum:
                    - Owner
                    - Collaborator
                    - Viewer
                    - NoRole
                type: string
            Sample:
                type: object
                properties:
                    entityType:
                        $ref: '#/components/schemas/EntityType'
                    elementId:
                        format: uuid
                        type: string
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            SeeAlso:
                type: object
                properties:
                    format:
                        nullable: true
                        type: string
                    '@id':
                        nullable: true
                        type: string
                    profile:
                        nullable: true
                        type: string
                additionalProperties: false
            Sequence:
                type: object
                properties:
                    canvases:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Canvas'
                    '@context':
                        nullable: true
                        type: string
                    '@id':
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                    '@type':
                        nullable: true
                        type: string
                    startCanvas:
                        nullable: true
                        type: string
                    viewingDirection:
                        nullable: true
                        type: string
                    viewingHint:
                        nullable: true
                        type: string
                additionalProperties: false
            Service:
                type: object
                properties:
                    '@context':
                        nullable: true
                        type: string
                    '@id':
                        nullable: true
                        type: string
                    profile:
                        nullable: true
                        type: string
                additionalProperties: false
            ServiceStatusModel:
                required:
                    - name
                    - version
                type: object
                properties:
                    name:
                        minLength: 1
                        type: string
                    version:
                        minLength: 1
                        type: string
                additionalProperties: false
            Status:
                enum:
                    - NotStarted
                    - InProgress
                    - Suspended
                    - Warning
                    - Completed
                    - Created
                    - Pending
                    - Starting
                    - Started
                    - Pausing
                    - Paused
                    - Aborting
                    - Aborted
                    - Stopping
                    - Stopped
                    - Cancelled
                    - CompletedWithWarnings
                    - CompletedWithErrors
                    - StartedManuallyRecoverable
                    - FailedManuallyRecoverable
                    - FailedAutomaticallyRecoverable
                    - PendingSample
                    - WaitingForStart
                    - SampleLost
                    - Skipped
                    - WaitingForManualInput
                    - Unset
                type: string
            StatusType:
                enum:
                    - System
                type: string
            StatusUpdateModel:
                required:
                    - entityId
                    - entityType
                    - status
                    - statusType
                type: object
                properties:
                    entityId:
                        format: int32
                        type: integer
                    entityType:
                        $ref: '#/components/schemas/EntityType'
                    statusType:
                        $ref: '#/components/schemas/StatusType'
                    status:
                        type: string
                additionalProperties: false
            StatusValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            Step:
                type: object
                properties:
                    activities:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/ActivityDao'
                    activityTypeReference:
                        $ref: '#/components/schemas/ActivityTypeReference'
                    breadcrumb:
                        $ref: '#/components/schemas/Breadcrumb'
                    files:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/File'
                    manifest:
                        $ref: '#/components/schemas/Manifest'
                    note:
                        $ref: '#/components/schemas/Note'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    workflow:
                        $ref: '#/components/schemas/Workflow'
                    activityState:
                        $ref: '#/components/schemas/ActivityStatus'
                    description:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    order:
                        format: int32
                        type: integer
                    status:
                        $ref: '#/components/schemas/Status'
                    statusId:
                        format: int32
                        type: integer
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    thumbnail:
                        nullable: true
                        type: string
                    type:
                        $ref: '#/components/schemas/StepType'
                    workflowId:
                        format: int32
                        type: integer
                    elementId:
                        format: uuid
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    activityTypeReferenceId:
                        format: int32
                        type: integer
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            StepCreationModel:
                required:
                    - typeName
                    - workflowId
                type: object
                properties:
                    name:
                        nullable: true
                        type: string
                    typeName:
                        minLength: 1
                        type: string
                    workflowId:
                        format: int32
                        type: integer
                additionalProperties: false
            StepOrderModel:
                required:
                    - order
                type: object
                properties:
                    order:
                        format: int32
                        type: integer
                additionalProperties: false
            StepStatusModel:
                required:
                    - status
                type: object
                properties:
                    status:
                        $ref: '#/components/schemas/Status'
                additionalProperties: false
            StepType:
                enum:
                    - DefaultStep
                    - DeviceOrInstrument
                    - Application
                    - ServiceOrModule
                    - Data
                    - Sample
                type: string
            StringListValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            StringValueInput:
                type: object
                properties:
                    isSet:
                        type: boolean
                        readOnly: true
                    value:
                        nullable: true
                    isNull:
                        type: boolean
                        readOnly: true
                additionalProperties: false
            Structure:
                type: object
                properties:
                    canvases:
                        nullable: true
                        type: array
                        items:
                            type: string
                    '@id':
                        nullable: true
                        type: string
                    label:
                        nullable: true
                        type: string
                    '@type':
                        nullable: true
                        type: string
                additionalProperties: false
            SystemStateEnumList:
                enum:
                    - deleting
                type: string
            SystemStatus:
                enum:
                    - Deleting
                type: string
            Thumbnail:
                type: object
                properties:
                    '@id':
                        nullable: true
                        type: string
                    height:
                        format: int32
                        type: integer
                    width:
                        format: int32
                        type: integer
                    '@type':
                        nullable: true
                        type: string
                additionalProperties: false
            TreeElementClassEnumList:
                enum:
                    - activity
                    - file
                    - item
                    - folder
                type: string
            TreeElementResponseModel:
                required:
                    - class
                    - depth
                    - id
                type: object
                properties:
                    id:
                        format: uuid
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    class:
                        $ref: '#/components/schemas/TreeElementClassEnumList'
                    depth:
                        format: int32
                        type: integer
                    links:
                        nullable: true
                        type: array
                        items:
                            format: uuid
                            type: string
                additionalProperties: false
            TreeElementResponseModelBasicListResponseModel:
                required:
                    - data
                    - pagination
                type: object
                properties:
                    pagination:
                        $ref: '#/components/schemas/PaginationResponseModel'
                    data:
                        type: array
                        items:
                            $ref: '#/components/schemas/TreeElementResponseModel'
                additionalProperties: false
            Unit:
                type: object
                properties:
                    id:
                        format: int32
                        type: integer
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    value:
                        nullable: true
                        type: string
                    unitQuantity:
                        $ref: '#/components/schemas/UnitQuantity'
                additionalProperties: false
            UnitQuantity:
                enum:
                    - ElectricCurrent
                    - Temperature
                    - Time
                    - Length
                    - Mass
                    - LuminousIntensity
                    - AmountOfSubstance
                type: string
            User:
                required:
                    - creationDate
                    - id
                    - updateDate
                    - username
                type: object
                properties:
                    creationDate:
                        format: date-time
                        type: string
                    email:
                        nullable: true
                        type: string
                    firstName:
                        nullable: true
                        type: string
                    id:
                        minLength: 1
                        type: string
                    lastName:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                    username:
                        minLength: 1
                        type: string
                additionalProperties: false
            UserModel:
                type: object
                properties:
                    id:
                        nullable: true
                        type: string
                    username:
                        nullable: true
                        type: string
                    role:
                        $ref: '#/components/schemas/Role'
                additionalProperties: false
            UserPermissionDto:
                type: object
                properties:
                    experimentId:
                        format: int32
                        type: integer
                    permissionId:
                        nullable: true
                        type: string
                    role:
                        nullable: true
                        type: string
                    userId:
                        nullable: true
                        type: string
                    userName:
                        nullable: true
                        type: string
                additionalProperties: false
            Visibility:
                enum:
                    - Private
                    - Public
                type: string
            Workflow:
                type: object
                properties:
                    breadcrumb:
                        $ref: '#/components/schemas/Breadcrumb'
                    experiment:
                        $ref: '#/components/schemas/Experiment'
                    manifest:
                        $ref: '#/components/schemas/Manifest'
                    note:
                        $ref: '#/components/schemas/Note'
                    properties:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Property'
                    steps:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Step'
                    activityTypeReference:
                        $ref: '#/components/schemas/ActivityTypeReference'
                    childrenCount:
                        format: int32
                        type: integer
                    description:
                        nullable: true
                        type: string
                    experimentId:
                        format: int32
                        type: integer
                    systemStatus:
                        nullable: true
                        uniqueItems: true
                        type: array
                        items:
                            $ref: '#/components/schemas/SystemStatus'
                    thumbnails:
                        nullable: true
                        type: array
                        items:
                            type: string
                    type:
                        $ref: '#/components/schemas/WorkflowType'
                    elementId:
                        format: uuid
                        type: string
                    typeName:
                        nullable: true
                        type: string
                    activityTypeReferenceId:
                        format: int32
                        type: integer
                    actions:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/Action'
                    creationDate:
                        format: date-time
                        type: string
                    creator:
                        nullable: true
                        type: string
                    creatorName:
                        nullable: true
                        type: string
                    id:
                        format: int32
                        type: integer
                    name:
                        nullable: true
                        type: string
                    updateDate:
                        format: date-time
                        type: string
                additionalProperties: false
            WorkflowCreationModel:
                required:
                    - experimentId
                    - name
                    - typeName
                type: object
                properties:
                    experimentId:
                        format: int32
                        type: integer
                    name:
                        minLength: 1
                        type: string
                    typeName:
                        type: string
                additionalProperties: false
            WorkflowType:
                enum:
                    - Free
                    - SingleParticleAnalysis
                type: string
            ActivityResponseModel:
                required:
                    - author
                    - createdDateTime
                    - id
                    - name
                    - properties
                    - status
                    - type
                type: object
                properties:
                    name:
                        minLength: 1
                        type: string
                    description:
                        nullable: true
                        type: string
                    id:
                        format: uuid
                        type: string
                    author:
                        $ref: '#/components/schemas/AuthorResponseModel'
                    status:
                        minLength: 1
                        type: string
                    type:
                        $ref: '#/components/schemas/ActivityTypeResponseModel'
                    properties:
                        type: array
                        items:
                            $ref: '#/components/schemas/PropertyResponseModel'
                    createdDateTime:
                        format: date-time
                        type: string
                    updatedDateTime:
                        nullable: true
                        format: date-time
                        type: string
                    parentId:
                        nullable: true
                        format: uuid
                        type: string
                    _links:
                        nullable: true
                        type: array
                        items:
                            $ref: '#/components/schemas/NavigationLinkResponseModel'
                    lifecycleState:
                        $ref: '#/components/schemas/SystemStateEnumList'
                    previousActivityId:
                        format: uuid
                        type: string
                additionalProperties: false
            test:
                description: ''
                type: object
        securitySchemes:
            oauth2:
                flows:
                    authorizationCode:
                        authorizationUrl: >-
                            https://frbor-athena-lab-master01.emea.thermo.com/auth/realms/athena-dev/protocol/openid-connect/auth
                        tokenUrl: >-
                            https://frbor-athena-lab-master01.emea.thermo.com/auth/realms/athena-dev/protocol/openid-connect/token
                type: oauth2
